{"version":3,"file":"scribe.min.js","mappings":"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","sources":["../bower_components/lodash-amd/modern/internals/isNative.js","../bower_components/lodash-amd/modern/internals/objectTypes.js","../bower_components/lodash-amd/modern/objects/isObject.js","../bower_components/lodash-amd/modern/internals/shimKeys.js","../bower_components/lodash-amd/modern/objects/keys.js","../bower_components/lodash-amd/modern/objects/defaults.js","../src/plugins/core/commands/indent.js","../src/plugins/core/commands/insert-list.js","../src/plugins/core/commands/outdent.js","../src/plugins/core/commands/redo.js","../src/plugins/core/commands/subscript.js","../src/plugins/core/commands/superscript.js","../src/plugins/core/commands/undo.js","../src/plugins/core/commands.js","../bower_components/lodash-amd/modern/internals/baseIndexOf.js","../bower_components/lodash-amd/modern/utilities/noop.js","../bower_components/lodash-amd/modern/internals/baseCreate.js","../bower_components/lodash-amd/modern/internals/setBindData.js","../bower_components/lodash-amd/modern/internals/slice.js","../bower_components/lodash-amd/modern/internals/baseBind.js","../bower_components/lodash-amd/modern/internals/baseCreateWrapper.js","../bower_components/lodash-amd/modern/objects/isFunction.js","../bower_components/lodash-amd/modern/internals/createWrapper.js","../bower_components/lodash-amd/modern/functions/bind.js","../bower_components/lodash-amd/modern/utilities/identity.js","../bower_components/lodash-amd/modern/support.js","../bower_components/lodash-amd/modern/internals/baseCreateCallback.js","../bower_components/lodash-amd/modern/objects/forOwn.js","../bower_components/lodash-amd/modern/objects/isArray.js","../bower_components/lodash-amd/modern/objects/isString.js","../bower_components/lodash-amd/modern/collections/contains.js","../bower_components/lodash-amd/modern/objects/isArguments.js","../bower_components/lodash-amd/modern/internals/baseFlatten.js","../bower_components/lodash-amd/modern/objects/forIn.js","../bower_components/lodash-amd/modern/internals/arrayPool.js","../bower_components/lodash-amd/modern/internals/getArray.js","../bower_components/lodash-amd/modern/internals/maxPoolSize.js","../bower_components/lodash-amd/modern/internals/releaseArray.js","../bower_components/lodash-amd/modern/internals/baseIsEqual.js","../bower_components/lodash-amd/modern/utilities/property.js","../bower_components/lodash-amd/modern/functions/createCallback.js","../bower_components/lodash-amd/modern/collections/map.js","../bower_components/lodash-amd/modern/arrays/flatten.js","../bower_components/lodash-amd/modern/objects/values.js","../bower_components/lodash-amd/modern/collections/toArray.js","../src/element.js","../src/node.js","../src/dom-observer.js","../src/plugins/core/events.js","../src/plugins/core/formatters/html/replace-nbsp-chars.js","../bower_components/lodash-amd/modern/arrays/last.js","../src/plugins/core/formatters/html/enforce-p-elements.js","../src/plugins/core/formatters/html/ensure-selectable-containers.js","../bower_components/lodash-amd/modern/internals/htmlEscapes.js","../bower_components/lodash-amd/modern/internals/escapeHtmlChar.js","../bower_components/lodash-amd/modern/internals/reUnescapedHtml.js","../bower_components/lodash-amd/modern/utilities/escape.js","../src/plugins/core/formatters/plain-text/escape-html-characters.js","../src/plugins/core/inline-elements-mode.js","../src/plugins/core/patches/commands/bold.js","../src/plugins/core/patches/commands/indent.js","../src/plugins/core/patches/commands/insert-html.js","../src/plugins/core/patches/commands/insert-list.js","../src/plugins/core/patches/commands/outdent.js","../src/plugins/core/patches/commands/create-link.js","../src/plugins/core/patches/events.js","../src/plugins/core/patches.js","../src/plugins/core/set-root-p-element.js","../src/api/command-patch.js","../src/api/command.js","../src/api/node.js","../src/api/selection.js","../src/api/simple-command.js","../src/api.js","../bower_components/lodash-amd/modern/objects/assign.js","../src/transaction-manager.js","../src/undo-manager.js","../bower_components/lodash-amd/modern/arrays/pull.js","../bower_components/immutable/dist/immutable.js","../src/event-emitter.js","../src/scribe.js"],"sourcesContent":["/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/isNative',[], function() {\n\n  /** Used for native method references */\n  var objectProto = Object.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /** Used to detect if a method is native */\n  var reNative = RegExp('^' +\n    String(toString)\n      .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n      .replace(/toString| for [^\\]]+/g, '.*?') + '$'\n  );\n\n  /**\n   * Checks if `value` is a native function.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.\n   */\n  function isNative(value) {\n    return typeof value == 'function' && reNative.test(value);\n  }\n\n  return isNative;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/objectTypes',[], function() {\n\n  /** Used to determine if values are of the language type Object */\n  var objectTypes = {\n    'boolean': false,\n    'function': true,\n    'object': true,\n    'number': false,\n    'string': false,\n    'undefined': false\n  };\n\n  return objectTypes;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/isObject',['../internals/objectTypes'], function(objectTypes) {\n\n  /**\n   * Checks if `value` is the language type of Object.\n   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(1);\n   * // => false\n   */\n  function isObject(value) {\n    // check if the value is the ECMAScript language type of Object\n    // http://es5.github.io/#x8\n    // and avoid a V8 bug\n    // http://code.google.com/p/v8/issues/detail?id=2291\n    return !!(value && objectTypes[typeof value]);\n  }\n\n  return isObject;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/shimKeys',['./objectTypes'], function(objectTypes) {\n\n  /** Used for native method references */\n  var objectProto = Object.prototype;\n\n  /** Native method shortcuts */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /**\n   * A fallback implementation of `Object.keys` which produces an array of the\n   * given object's own enumerable property names.\n   *\n   * @private\n   * @type Function\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   */\n  var shimKeys = function(object) {\n    var index, iterable = object, result = [];\n    if (!iterable) return result;\n    if (!(objectTypes[typeof object])) return result;\n      for (index in iterable) {\n        if (hasOwnProperty.call(iterable, index)) {\n          result.push(index);\n        }\n      }\n    return result\n  };\n\n  return shimKeys;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/keys',['../internals/isNative', './isObject', '../internals/shimKeys'], function(isNative, isObject, shimKeys) {\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\n\n  /**\n   * Creates an array composed of the own enumerable property names of an object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property names.\n   * @example\n   *\n   * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)\n   */\n  var keys = !nativeKeys ? shimKeys : function(object) {\n    if (!isObject(object)) {\n      return [];\n    }\n    return nativeKeys(object);\n  };\n\n  return keys;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/defaults',['./keys', '../internals/objectTypes'], function(keys, objectTypes) {\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object for all destination properties that resolve to `undefined`. Once a\n   * property is set, additional defaults of the same property will be ignored.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param- {Object} [guard] Allows working with `_.reduce` without using its\n   *  `key` and `object` arguments as sources.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * var object = { 'name': 'barney' };\n   * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });\n   * // => { 'name': 'barney', 'employer': 'slate' }\n   */\n  var defaults = function(object, source, guard) {\n    var index, iterable = object, result = iterable;\n    if (!iterable) return result;\n    var args = arguments,\n        argsIndex = 0,\n        argsLength = typeof guard == 'number' ? 2 : args.length;\n    while (++argsIndex < argsLength) {\n      iterable = args[argsIndex];\n      if (iterable && objectTypes[typeof iterable]) {\n      var ownIndex = -1,\n          ownProps = objectTypes[typeof iterable] && keys(iterable),\n          length = ownProps ? ownProps.length : 0;\n\n      while (++ownIndex < length) {\n        index = ownProps[ownIndex];\n        if (typeof result[index] == 'undefined') result[index] = iterable[index];\n      }\n      }\n    }\n    return result\n  };\n\n  return defaults;\n});\n\n","define('plugins/core/commands/indent',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var indentCommand = new scribe.api.Command('indent');\n\n      indentCommand.queryEnabled = function () {\n        /**\n         * FIXME: Chrome nests ULs inside of ULs\n         * Currently we just disable the command when the selection is inside of\n         * a list.\n         * As per: http://jsbin.com/ORikUPa/3/edit?html,js,output\n         */\n        var selection = new scribe.api.Selection();\n        var listElement = selection.getContaining(function (element) {\n          return element.nodeName === 'UL' || element.nodeName === 'OL';\n        });\n\n        return scribe.api.Command.prototype.queryEnabled.call(this) && scribe.allowsBlockElements() && ! listElement;\n      };\n\n      scribe.commands.indent = indentCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/commands/insert-list',[],function () {\n\n  /**\n   * If the paragraphs option is set to true, then when the list is\n   * unapplied, ensure that we enter a P element.\n   */\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var InsertListCommand = function (commandName) {\n        scribe.api.Command.call(this, commandName);\n      };\n\n      InsertListCommand.prototype = Object.create(scribe.api.Command.prototype);\n      InsertListCommand.prototype.constructor = InsertListCommand;\n\n      InsertListCommand.prototype.execute = function (value) {\n        function splitList(listItemElements) {\n          if (listItemElements.length > 0) {\n            var newListNode = document.createElement(listNode.nodeName);\n\n            listItemElements.forEach(function (listItemElement) {\n              newListNode.appendChild(listItemElement);\n            });\n\n            listNode.parentNode.insertBefore(newListNode, listNode.nextElementSibling);\n          }\n        }\n\n        if (this.queryState()) {\n          var selection = new scribe.api.Selection();\n          var range = selection.range;\n\n          var listNode = selection.getContaining(function (node) {\n            return node.nodeName === 'OL' || node.nodeName === 'UL';\n          });\n\n          var listItemElement = selection.getContaining(function (node) {\n            return node.nodeName === 'LI';\n          });\n\n          scribe.transactionManager.run(function () {\n            if (listItemElement) {\n              var nextListItemElements = (new scribe.api.Node(listItemElement)).nextAll();\n\n              /**\n               * If we are not at the start or end of a UL/OL, we have to\n               * split the node and insert the P(s) in the middle.\n               */\n              splitList(nextListItemElements);\n\n              /**\n               * Insert a paragraph in place of the list item.\n               */\n\n              selection.placeMarkers();\n\n              var pNode = document.createElement('p');\n              pNode.innerHTML = listItemElement.innerHTML;\n\n              listNode.parentNode.insertBefore(pNode, listNode.nextElementSibling);\n              listItemElement.parentNode.removeChild(listItemElement);\n            } else {\n              /**\n               * When multiple list items are selected, we replace each list\n               * item with a paragraph.\n               */\n\n              // We can't query for list items in the selection so we loop\n              // through them all and find the intersection ourselves.\n              var selectedListItemElements = Array.prototype.map.call(listNode.querySelectorAll('li'),\n                function (listItemElement) {\n                return range.intersectsNode(listItemElement) && listItemElement;\n              }).filter(function (listItemElement) {\n                // TODO: identity\n                return listItemElement;\n              });\n              var lastSelectedListItemElement = selectedListItemElements.slice(-1)[0];\n              var listItemElementsAfterSelection = (new scribe.api.Node(lastSelectedListItemElement)).nextAll();\n\n              /**\n               * If we are not at the start or end of a UL/OL, we have to\n               * split the node and insert the P(s) in the middle.\n               */\n              splitList(listItemElementsAfterSelection);\n\n              // Store the caret/range positioning inside of the list items so\n              // we can restore it from the newly created P elements soon\n              // afterwards.\n              selection.placeMarkers();\n\n              var documentFragment = document.createDocumentFragment();\n              selectedListItemElements.forEach(function (listItemElement) {\n                var pElement = document.createElement('p');\n                pElement.innerHTML = listItemElement.innerHTML;\n                documentFragment.appendChild(pElement);\n              });\n\n              // Insert the Ps\n              listNode.parentNode.insertBefore(documentFragment, listNode.nextElementSibling);\n\n              // Remove the LIs\n              selectedListItemElements.forEach(function (listItemElement) {\n                listItemElement.parentNode.removeChild(listItemElement);\n              });\n            }\n\n            // If the list is now empty, clean it up.\n            if (listNode.childNodes.length === 0) {\n              listNode.parentNode.removeChild(listNode);\n            }\n\n            selection.selectMarkers();\n          }.bind(this));\n        } else {\n          scribe.api.Command.prototype.execute.call(this, value);\n        }\n      };\n\n      InsertListCommand.prototype.queryEnabled = function () {\n        return scribe.api.Command.prototype.queryEnabled.call(this) && scribe.allowsBlockElements();\n      };\n\n      scribe.commands.insertOrderedList = new InsertListCommand('insertOrderedList');\n      scribe.commands.insertUnorderedList = new InsertListCommand('insertUnorderedList');\n    };\n  };\n\n});\n\n","define('plugins/core/commands/outdent',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var outdentCommand = new scribe.api.Command('outdent');\n\n      outdentCommand.queryEnabled = function () {\n        /**\n         * FIXME: If the paragraphs option is set to true, then when the\n         * list is unapplied, ensure that we enter a P element.\n         * Currently we just disable the command when the selection is inside of\n         * a list.\n         */\n        var selection = new scribe.api.Selection();\n        var listElement = selection.getContaining(function (element) {\n          return element.nodeName === 'UL' || element.nodeName === 'OL';\n        });\n\n        // FIXME: define block element rule here?\n        return scribe.api.Command.prototype.queryEnabled.call(this) && scribe.allowsBlockElements() && ! listElement;\n      };\n\n      scribe.commands.outdent = outdentCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/commands/redo',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var redoCommand = new scribe.api.Command('redo');\n\n      redoCommand.execute = function () {\n        var historyItem = scribe.undoManager.redo();\n\n        if (typeof historyItem !== 'undefined') {\n          scribe.restoreFromHistory(historyItem);\n        }\n      };\n\n      redoCommand.queryEnabled = function () {\n        return scribe.undoManager.position < scribe.undoManager.stack.length - 1;\n      };\n\n      scribe.commands.redo = redoCommand;\n\n      scribe.el.addEventListener('keydown', function (event) {\n        if (event.shiftKey && (event.metaKey || event.ctrlKey) && event.keyCode === 90) {\n          event.preventDefault();\n          redoCommand.execute();\n        }\n      });\n    };\n  };\n\n});\n\n","define('plugins/core/commands/subscript',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var subscriptCommand = new scribe.api.Command('subscript');\n\n      scribe.commands.subscript = subscriptCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/commands/superscript',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var superscriptCommand = new scribe.api.Command('superscript');\n\n      scribe.commands.superscript = superscriptCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/commands/undo',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var undoCommand = new scribe.api.Command('undo');\n\n      undoCommand.execute = function () {\n        var historyItem = scribe.undoManager.undo();\n\n        if (typeof historyItem !== 'undefined') {\n          scribe.restoreFromHistory(historyItem);\n        }\n      };\n\n      undoCommand.queryEnabled = function () {\n        return scribe.undoManager.position > 1;\n      };\n\n      scribe.commands.undo = undoCommand;\n\n      scribe.el.addEventListener('keydown', function (event) {\n        // TODO: use lib to abstract meta/ctrl keys?\n        if (! event.shiftKey && (event.metaKey || event.ctrlKey) && event.keyCode === 90) {\n          event.preventDefault();\n          undoCommand.execute();\n        }\n      });\n    };\n  };\n\n});\n\n","define('plugins/core/commands',[\n  './commands/indent',\n  './commands/insert-list',\n  './commands/outdent',\n  './commands/redo',\n  './commands/subscript',\n  './commands/superscript',\n  './commands/undo'\n], function (\n  indent,\n  insertList,\n  outdent,\n  redo,\n  subscript,\n  superscript,\n  undo\n) {\n\n  'use strict';\n\n  return {\n    indent: indent,\n    insertList: insertList,\n    outdent: outdent,\n    redo: redo,\n    subscript: subscript,\n    superscript: superscript,\n    undo: undo\n  };\n\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseIndexOf',[], function() {\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches\n   * or `fromIndex` constraints.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value or `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  return baseIndexOf;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/utilities/noop',[], function() {\n\n  /**\n   * A no-operation function.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.noop(object) === undefined;\n   * // => true\n   */\n  function noop() {\n    // no operation performed\n  }\n\n  return noop;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseCreate',['./isNative', '../objects/isObject', '../utilities/noop'], function(isNative, isObject, noop) {\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate;\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} prototype The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  function baseCreate(prototype, properties) {\n    return isObject(prototype) ? nativeCreate(prototype) : {};\n  }\n  // fallback for browsers without `Object.create`\n  if (!nativeCreate) {\n    baseCreate = (function() {\n      function Object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          Object.prototype = prototype;\n          var result = new Object;\n          Object.prototype = null;\n        }\n        return result || window.Object();\n      };\n    }());\n  }\n\n  return baseCreate;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/setBindData',['./isNative', '../utilities/noop'], function(isNative, noop) {\n\n  /** Used as the property descriptor for `__bindData__` */\n  var descriptor = {\n    'configurable': false,\n    'enumerable': false,\n    'value': null,\n    'writable': false\n  };\n\n  /** Used to set meta data on functions */\n  var defineProperty = (function() {\n    // IE 8 only accepts DOM elements\n    try {\n      var o = {},\n          func = isNative(func = Object.defineProperty) && func,\n          result = func(o, o, o) && func;\n    } catch(e) { }\n    return result;\n  }());\n\n  /**\n   * Sets `this` binding data on a given function.\n   *\n   * @private\n   * @param {Function} func The function to set data on.\n   * @param {Array} value The data array to set.\n   */\n  var setBindData = !defineProperty ? noop : function(func, value) {\n    descriptor.value = value;\n    defineProperty(func, '__bindData__', descriptor);\n  };\n\n  return setBindData;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/slice',[], function() {\n\n  /**\n   * Slices the `collection` from the `start` index up to, but not including,\n   * the `end` index.\n   *\n   * Note: This function is used instead of `Array#slice` to support node lists\n   * in IE < 9 and to ensure dense arrays are returned.\n   *\n   * @private\n   * @param {Array|Object|string} collection The collection to slice.\n   * @param {number} start The start index.\n   * @param {number} end The end index.\n   * @returns {Array} Returns the new array.\n   */\n  function slice(array, start, end) {\n    start || (start = 0);\n    if (typeof end == 'undefined') {\n      end = array ? array.length : 0;\n    }\n    var index = -1,\n        length = end - start || 0,\n        result = Array(length < 0 ? 0 : length);\n\n    while (++index < length) {\n      result[index] = array[start + index];\n    }\n    return result;\n  }\n\n  return slice;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseBind',['./baseCreate', '../objects/isObject', './setBindData', './slice'], function(baseCreate, isObject, setBindData, slice) {\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n  var arrayRef = [];\n\n  /** Native method shortcuts */\n  var push = arrayRef.push;\n\n  /**\n   * The base implementation of `_.bind` that creates the bound function and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new bound function.\n   */\n  function baseBind(bindData) {\n    var func = bindData[0],\n        partialArgs = bindData[2],\n        thisArg = bindData[4];\n\n    function bound() {\n      // `Function#bind` spec\n      // http://es5.github.io/#x15.3.4.5\n      if (partialArgs) {\n        // avoid `arguments` object deoptimizations by using `slice` instead\n        // of `Array.prototype.slice.call` and not assigning `arguments` to a\n        // variable as a ternary expression\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      }\n      // mimic the constructor's `return` behavior\n      // http://es5.github.io/#x13.2.2\n      if (this instanceof bound) {\n        // ensure `new bound` is an instance of `func`\n        var thisBinding = baseCreate(func.prototype),\n            result = func.apply(thisBinding, args || arguments);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisArg, args || arguments);\n    }\n    setBindData(bound, bindData);\n    return bound;\n  }\n\n  return baseBind;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseCreateWrapper',['./baseCreate', '../objects/isObject', './setBindData', './slice'], function(baseCreate, isObject, setBindData, slice) {\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n  var arrayRef = [];\n\n  /** Native method shortcuts */\n  var push = arrayRef.push;\n\n  /**\n   * The base implementation of `createWrapper` that creates the wrapper and\n   * sets its meta data.\n   *\n   * @private\n   * @param {Array} bindData The bind data array.\n   * @returns {Function} Returns the new function.\n   */\n  function baseCreateWrapper(bindData) {\n    var func = bindData[0],\n        bitmask = bindData[1],\n        partialArgs = bindData[2],\n        partialRightArgs = bindData[3],\n        thisArg = bindData[4],\n        arity = bindData[5];\n\n    var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        key = func;\n\n    function bound() {\n      var thisBinding = isBind ? thisArg : this;\n      if (partialArgs) {\n        var args = slice(partialArgs);\n        push.apply(args, arguments);\n      }\n      if (partialRightArgs || isCurry) {\n        args || (args = slice(arguments));\n        if (partialRightArgs) {\n          push.apply(args, partialRightArgs);\n        }\n        if (isCurry && args.length < arity) {\n          bitmask |= 16 & ~32;\n          return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);\n        }\n      }\n      args || (args = arguments);\n      if (isBindKey) {\n        func = thisBinding[key];\n      }\n      if (this instanceof bound) {\n        thisBinding = baseCreate(func.prototype);\n        var result = func.apply(thisBinding, args);\n        return isObject(result) ? result : thisBinding;\n      }\n      return func.apply(thisBinding, args);\n    }\n    setBindData(bound, bindData);\n    return bound;\n  }\n\n  return baseCreateWrapper;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/isFunction',[], function() {\n\n  /**\n   * Checks if `value` is a function.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   */\n  function isFunction(value) {\n    return typeof value == 'function';\n  }\n\n  return isFunction;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/createWrapper',['./baseBind', './baseCreateWrapper', '../objects/isFunction', './slice'], function(baseBind, baseCreateWrapper, isFunction, slice) {\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n  var arrayRef = [];\n\n  /** Native method shortcuts */\n  var push = arrayRef.push,\n      unshift = arrayRef.unshift;\n\n  /**\n   * Creates a function that, when called, either curries or invokes `func`\n   * with an optional `this` binding and partially applied arguments.\n   *\n   * @private\n   * @param {Function|string} func The function or method name to reference.\n   * @param {number} bitmask The bitmask of method flags to compose.\n   *  The bitmask may be composed of the following flags:\n   *  1 - `_.bind`\n   *  2 - `_.bindKey`\n   *  4 - `_.curry`\n   *  8 - `_.curry` (bound)\n   *  16 - `_.partial`\n   *  32 - `_.partialRight`\n   * @param {Array} [partialArgs] An array of arguments to prepend to those\n   *  provided to the new function.\n   * @param {Array} [partialRightArgs] An array of arguments to append to those\n   *  provided to the new function.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {number} [arity] The arity of `func`.\n   * @returns {Function} Returns the new function.\n   */\n  function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {\n    var isBind = bitmask & 1,\n        isBindKey = bitmask & 2,\n        isCurry = bitmask & 4,\n        isCurryBound = bitmask & 8,\n        isPartial = bitmask & 16,\n        isPartialRight = bitmask & 32;\n\n    if (!isBindKey && !isFunction(func)) {\n      throw new TypeError;\n    }\n    if (isPartial && !partialArgs.length) {\n      bitmask &= ~16;\n      isPartial = partialArgs = false;\n    }\n    if (isPartialRight && !partialRightArgs.length) {\n      bitmask &= ~32;\n      isPartialRight = partialRightArgs = false;\n    }\n    var bindData = func && func.__bindData__;\n    if (bindData && bindData !== true) {\n      // clone `bindData`\n      bindData = slice(bindData);\n      if (bindData[2]) {\n        bindData[2] = slice(bindData[2]);\n      }\n      if (bindData[3]) {\n        bindData[3] = slice(bindData[3]);\n      }\n      // set `thisBinding` is not previously bound\n      if (isBind && !(bindData[1] & 1)) {\n        bindData[4] = thisArg;\n      }\n      // set if previously bound but not currently (subsequent curried functions)\n      if (!isBind && bindData[1] & 1) {\n        bitmask |= 8;\n      }\n      // set curried arity if not yet set\n      if (isCurry && !(bindData[1] & 4)) {\n        bindData[5] = arity;\n      }\n      // append partial left arguments\n      if (isPartial) {\n        push.apply(bindData[2] || (bindData[2] = []), partialArgs);\n      }\n      // append partial right arguments\n      if (isPartialRight) {\n        unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);\n      }\n      // merge flags\n      bindData[1] |= bitmask;\n      return createWrapper.apply(null, bindData);\n    }\n    // fast path for `_.bind`\n    var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;\n    return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);\n  }\n\n  return createWrapper;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/functions/bind',['../internals/createWrapper', '../internals/slice'], function(createWrapper, slice) {\n\n  /**\n   * Creates a function that, when called, invokes `func` with the `this`\n   * binding of `thisArg` and prepends any additional `bind` arguments to those\n   * provided to the bound function.\n   *\n   * @static\n   * @memberOf _\n   * @category Functions\n   * @param {Function} func The function to bind.\n   * @param {*} [thisArg] The `this` binding of `func`.\n   * @param {...*} [arg] Arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * var func = function(greeting) {\n   *   return greeting + ' ' + this.name;\n   * };\n   *\n   * func = _.bind(func, { 'name': 'fred' }, 'hi');\n   * func();\n   * // => 'hi fred'\n   */\n  function bind(func, thisArg) {\n    return arguments.length > 2\n      ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)\n      : createWrapper(func, 1, null, null, thisArg);\n  }\n\n  return bind;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/utilities/identity',[], function() {\n\n  /**\n   * This method returns the first argument provided to it.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'name': 'fred' };\n   * _.identity(object) === object;\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  return identity;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/support',['./internals/isNative'], function(isNative) {\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /**\n   * An object used to flag environments features.\n   *\n   * @static\n   * @memberOf _\n   * @type Object\n   */\n  var support = {};\n\n  /**\n   * Detect if functions can be decompiled by `Function#toString`\n   * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.funcDecomp = !isNative(window.WinRTError) && reThis.test(function() { return this; });\n\n  /**\n   * Detect if `Function#name` is supported (all but IE).\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.funcNames = typeof Function.name == 'string';\n\n  return support;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseCreateCallback',['../functions/bind', '../utilities/identity', './setBindData', '../support'], function(bind, identity, setBindData, support) {\n\n  /** Used to detected named functions */\n  var reFuncName = /^\\s*function[ \\n\\r\\t]+\\w/;\n\n  /** Used to detect functions containing a `this` reference */\n  var reThis = /\\bthis\\b/;\n\n  /** Native method shortcuts */\n  var fnToString = Function.prototype.toString;\n\n  /**\n   * The base implementation of `_.createCallback` without support for creating\n   * \"_.pluck\" or \"_.where\" style callbacks.\n   *\n   * @private\n   * @param {*} [func=identity] The value to convert to a callback.\n   * @param {*} [thisArg] The `this` binding of the created callback.\n   * @param {number} [argCount] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   */\n  function baseCreateCallback(func, thisArg, argCount) {\n    if (typeof func != 'function') {\n      return identity;\n    }\n    // exit early for no `thisArg` or already bound by `Function#bind`\n    if (typeof thisArg == 'undefined' || !('prototype' in func)) {\n      return func;\n    }\n    var bindData = func.__bindData__;\n    if (typeof bindData == 'undefined') {\n      if (support.funcNames) {\n        bindData = !func.name;\n      }\n      bindData = bindData || !support.funcDecomp;\n      if (!bindData) {\n        var source = fnToString.call(func);\n        if (!support.funcNames) {\n          bindData = !reFuncName.test(source);\n        }\n        if (!bindData) {\n          // checks if `func` references the `this` keyword and stores the result\n          bindData = reThis.test(source);\n          setBindData(func, bindData);\n        }\n      }\n    }\n    // exit early if there are no `this` references or `func` is bound\n    if (bindData === false || (bindData !== true && bindData[1] & 1)) {\n      return func;\n    }\n    switch (argCount) {\n      case 1: return function(value) {\n        return func.call(thisArg, value);\n      };\n      case 2: return function(a, b) {\n        return func.call(thisArg, a, b);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(thisArg, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(thisArg, accumulator, value, index, collection);\n      };\n    }\n    return bind(func, thisArg);\n  }\n\n  return baseCreateCallback;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/forOwn',['../internals/baseCreateCallback', './keys', '../internals/objectTypes'], function(baseCreateCallback, keys, objectTypes) {\n\n  /**\n   * Iterates over own enumerable properties of an object, executing the callback\n   * for each property. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, key, object). Callbacks may exit iteration early by\n   * explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n   *   console.log(key);\n   * });\n   * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)\n   */\n  var forOwn = function(collection, callback, thisArg) {\n    var index, iterable = collection, result = iterable;\n    if (!iterable) return result;\n    if (!objectTypes[typeof iterable]) return result;\n    callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      var ownIndex = -1,\n          ownProps = objectTypes[typeof iterable] && keys(iterable),\n          length = ownProps ? ownProps.length : 0;\n\n      while (++ownIndex < length) {\n        index = ownProps[ownIndex];\n        if (callback(iterable[index], index, collection) === false) return result;\n      }\n    return result\n  };\n\n  return forOwn;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/isArray',['../internals/isNative'], function(isNative) {\n\n  /** `Object#toString` result shortcuts */\n  var arrayClass = '[object Array]';\n\n  /** Used for native method references */\n  var objectProto = Object.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray;\n\n  /**\n   * Checks if `value` is an array.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an array, else `false`.\n   * @example\n   *\n   * (function() { return _.isArray(arguments); })();\n   * // => false\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   */\n  var isArray = nativeIsArray || function(value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' &&\n      toString.call(value) == arrayClass || false;\n  };\n\n  return isArray;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/isString',[], function() {\n\n  /** `Object#toString` result shortcuts */\n  var stringClass = '[object String]';\n\n  /** Used for native method references */\n  var objectProto = Object.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /**\n   * Checks if `value` is a string.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('fred');\n   * // => true\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      value && typeof value == 'object' && toString.call(value) == stringClass || false;\n  }\n\n  return isString;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/collections/contains',['../internals/baseIndexOf', '../objects/forOwn', '../objects/isArray', '../objects/isString'], function(baseIndexOf, forOwn, isArray, isString) {\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeMax = Math.max;\n\n  /**\n   * Checks if a given value is present in a collection using strict equality\n   * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the\n   * offset from the end of the collection.\n   *\n   * @static\n   * @memberOf _\n   * @alias include\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {*} target The value to check for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {boolean} Returns `true` if the `target` element is found, else `false`.\n   * @example\n   *\n   * _.contains([1, 2, 3], 1);\n   * // => true\n   *\n   * _.contains([1, 2, 3], 1, 2);\n   * // => false\n   *\n   * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');\n   * // => true\n   *\n   * _.contains('pebbles', 'eb');\n   * // => true\n   */\n  function contains(collection, target, fromIndex) {\n    var index = -1,\n        indexOf = baseIndexOf,\n        length = collection ? collection.length : 0,\n        result = false;\n\n    fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;\n    if (isArray(collection)) {\n      result = indexOf(collection, target, fromIndex) > -1;\n    } else if (typeof length == 'number') {\n      result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;\n    } else {\n      forOwn(collection, function(value) {\n        if (++index >= fromIndex) {\n          return !(result = value === target);\n        }\n      });\n    }\n    return result;\n  }\n\n  return contains;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/isArguments',[], function() {\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]';\n\n  /** Used for native method references */\n  var objectProto = Object.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /**\n   * Checks if `value` is an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.\n   * @example\n   *\n   * (function() { return _.isArguments(arguments); })(1, 2, 3);\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    return value && typeof value == 'object' && typeof value.length == 'number' &&\n      toString.call(value) == argsClass || false;\n  }\n\n  return isArguments;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseFlatten',['../objects/isArguments', '../objects/isArray'], function(isArguments, isArray) {\n\n  /**\n   * The base implementation of `_.flatten` without support for callback\n   * shorthands or `thisArg` binding.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n   * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.\n   * @param {number} [fromIndex=0] The index to start from.\n   * @returns {Array} Returns a new flattened array.\n   */\n  function baseFlatten(array, isShallow, isStrict, fromIndex) {\n    var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n\n      if (value && typeof value == 'object' && typeof value.length == 'number'\n          && (isArray(value) || isArguments(value))) {\n        // recursively flatten arrays (susceptible to call stack limits)\n        if (!isShallow) {\n          value = baseFlatten(value, isShallow, isStrict);\n        }\n        var valIndex = -1,\n            valLength = value.length,\n            resIndex = result.length;\n\n        result.length += valLength;\n        while (++valIndex < valLength) {\n          result[resIndex++] = value[valIndex];\n        }\n      } else if (!isStrict) {\n        result.push(value);\n      }\n    }\n    return result;\n  }\n\n  return baseFlatten;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/forIn',['../internals/baseCreateCallback', '../internals/objectTypes'], function(baseCreateCallback, objectTypes) {\n\n  /**\n   * Iterates over own and inherited enumerable properties of an object,\n   * executing the callback for each property. The callback is bound to `thisArg`\n   * and invoked with three arguments; (value, key, object). Callbacks may exit\n   * iteration early by explicitly returning `false`.\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @category Objects\n   * @param {Object} object The object to iterate over.\n   * @param {Function} [callback=identity] The function called per iteration.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns `object`.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * Shape.prototype.move = function(x, y) {\n   *   this.x += x;\n   *   this.y += y;\n   * };\n   *\n   * _.forIn(new Shape, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)\n   */\n  var forIn = function(collection, callback, thisArg) {\n    var index, iterable = collection, result = iterable;\n    if (!iterable) return result;\n    if (!objectTypes[typeof iterable]) return result;\n    callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);\n      for (index in iterable) {\n        if (callback(iterable[index], index, collection) === false) return result;\n      }\n    return result\n  };\n\n  return forIn;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/arrayPool',[], function() {\n\n  /** Used to pool arrays and objects used internally */\n  var arrayPool = [];\n\n  return arrayPool;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/getArray',['./arrayPool'], function(arrayPool) {\n\n  /**\n   * Gets an array from the array pool or creates a new one if the pool is empty.\n   *\n   * @private\n   * @returns {Array} The array from the pool.\n   */\n  function getArray() {\n    return arrayPool.pop() || [];\n  }\n\n  return getArray;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/maxPoolSize',[], function() {\n\n  /** Used as the max size of the `arrayPool` and `objectPool` */\n  var maxPoolSize = 40;\n\n  return maxPoolSize;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/releaseArray',['./arrayPool', './maxPoolSize'], function(arrayPool, maxPoolSize) {\n\n  /**\n   * Releases the given array back to the array pool.\n   *\n   * @private\n   * @param {Array} [array] The array to release.\n   */\n  function releaseArray(array) {\n    array.length = 0;\n    if (arrayPool.length < maxPoolSize) {\n      arrayPool.push(array);\n    }\n  }\n\n  return releaseArray;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/baseIsEqual',['../objects/forIn', './getArray', '../objects/isFunction', './objectTypes', './releaseArray'], function(forIn, getArray, isFunction, objectTypes, releaseArray) {\n\n  /** `Object#toString` result shortcuts */\n  var argsClass = '[object Arguments]',\n      arrayClass = '[object Array]',\n      boolClass = '[object Boolean]',\n      dateClass = '[object Date]',\n      numberClass = '[object Number]',\n      objectClass = '[object Object]',\n      regexpClass = '[object RegExp]',\n      stringClass = '[object String]';\n\n  /** Used for native method references */\n  var objectProto = Object.prototype;\n\n  /** Used to resolve the internal [[Class]] of values */\n  var toString = objectProto.toString;\n\n  /** Native method shortcuts */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /**\n   * The base implementation of `_.isEqual`, without support for `thisArg` binding,\n   * that allows partial \"_.where\" style comparisons.\n   *\n   * @private\n   * @param {*} a The value to compare.\n   * @param {*} b The other value to compare.\n   * @param {Function} [callback] The function to customize comparing values.\n   * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.\n   * @param {Array} [stackA=[]] Tracks traversed `a` objects.\n   * @param {Array} [stackB=[]] Tracks traversed `b` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {\n    // used to indicate that when comparing objects, `a` has at least the properties of `b`\n    if (callback) {\n      var result = callback(a, b);\n      if (typeof result != 'undefined') {\n        return !!result;\n      }\n    }\n    // exit early for identical values\n    if (a === b) {\n      // treat `+0` vs. `-0` as not equal\n      return a !== 0 || (1 / a == 1 / b);\n    }\n    var type = typeof a,\n        otherType = typeof b;\n\n    // exit early for unlike primitive values\n    if (a === a &&\n        !(a && objectTypes[type]) &&\n        !(b && objectTypes[otherType])) {\n      return false;\n    }\n    // exit early for `null` and `undefined` avoiding ES3's Function#call behavior\n    // http://es5.github.io/#x15.3.4.4\n    if (a == null || b == null) {\n      return a === b;\n    }\n    // compare [[Class]] names\n    var className = toString.call(a),\n        otherClass = toString.call(b);\n\n    if (className == argsClass) {\n      className = objectClass;\n    }\n    if (otherClass == argsClass) {\n      otherClass = objectClass;\n    }\n    if (className != otherClass) {\n      return false;\n    }\n    switch (className) {\n      case boolClass:\n      case dateClass:\n        // coerce dates and booleans to numbers, dates to milliseconds and booleans\n        // to `1` or `0` treating invalid dates coerced to `NaN` as not equal\n        return +a == +b;\n\n      case numberClass:\n        // treat `NaN` vs. `NaN` as equal\n        return (a != +a)\n          ? b != +b\n          // but treat `+0` vs. `-0` as not equal\n          : (a == 0 ? (1 / a == 1 / b) : a == +b);\n\n      case regexpClass:\n      case stringClass:\n        // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)\n        // treat string primitives and their corresponding object instances as equal\n        return a == String(b);\n    }\n    var isArr = className == arrayClass;\n    if (!isArr) {\n      // unwrap any `lodash` wrapped values\n      var aWrapped = hasOwnProperty.call(a, '__wrapped__'),\n          bWrapped = hasOwnProperty.call(b, '__wrapped__');\n\n      if (aWrapped || bWrapped) {\n        return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);\n      }\n      // exit for functions and DOM nodes\n      if (className != objectClass) {\n        return false;\n      }\n      // in older versions of Opera, `arguments` objects have `Array` constructors\n      var ctorA = a.constructor,\n          ctorB = b.constructor;\n\n      // non `Object` object instances with different constructors are not equal\n      if (ctorA != ctorB &&\n            !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&\n            ('constructor' in a && 'constructor' in b)\n          ) {\n        return false;\n      }\n    }\n    // assume cyclic structures are equal\n    // the algorithm for detecting cyclic structures is adapted from ES 5.1\n    // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)\n    var initedStack = !stackA;\n    stackA || (stackA = getArray());\n    stackB || (stackB = getArray());\n\n    var length = stackA.length;\n    while (length--) {\n      if (stackA[length] == a) {\n        return stackB[length] == b;\n      }\n    }\n    var size = 0;\n    result = true;\n\n    // add `a` and `b` to the stack of traversed objects\n    stackA.push(a);\n    stackB.push(b);\n\n    // recursively compare objects and arrays (susceptible to call stack limits)\n    if (isArr) {\n      // compare lengths to determine if a deep comparison is necessary\n      length = a.length;\n      size = b.length;\n      result = size == length;\n\n      if (result || isWhere) {\n        // deep compare the contents, ignoring non-numeric properties\n        while (size--) {\n          var index = length,\n              value = b[size];\n\n          if (isWhere) {\n            while (index--) {\n              if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {\n                break;\n              }\n            }\n          } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {\n            break;\n          }\n        }\n      }\n    }\n    else {\n      // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`\n      // which, in this case, is more costly\n      forIn(b, function(value, key, b) {\n        if (hasOwnProperty.call(b, key)) {\n          // count the number of properties.\n          size++;\n          // deep compare each property value.\n          return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));\n        }\n      });\n\n      if (result && !isWhere) {\n        // ensure both objects have the same number of properties\n        forIn(a, function(value, key, a) {\n          if (hasOwnProperty.call(a, key)) {\n            // `size` will be `-1` if `a` has more properties than `b`\n            return (result = --size > -1);\n          }\n        });\n      }\n    }\n    stackA.pop();\n    stackB.pop();\n\n    if (initedStack) {\n      releaseArray(stackA);\n      releaseArray(stackB);\n    }\n    return result;\n  }\n\n  return baseIsEqual;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/utilities/property',[], function() {\n\n  /**\n   * Creates a \"_.pluck\" style function, which returns the `key` value of a\n   * given object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {string} key The name of the property to retrieve.\n   * @returns {Function} Returns the new function.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'fred',   'age': 40 },\n   *   { 'name': 'barney', 'age': 36 }\n   * ];\n   *\n   * var getName = _.property('name');\n   *\n   * _.map(characters, getName);\n   * // => ['barney', 'fred']\n   *\n   * _.sortBy(characters, getName);\n   * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]\n   */\n  function property(key) {\n    return function(object) {\n      return object[key];\n    };\n  }\n\n  return property;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/functions/createCallback',['../internals/baseCreateCallback', '../internals/baseIsEqual', '../objects/isObject', '../objects/keys', '../utilities/property'], function(baseCreateCallback, baseIsEqual, isObject, keys, property) {\n\n  /**\n   * Produces a callback bound to an optional `thisArg`. If `func` is a property\n   * name the created callback will return the property value for a given element.\n   * If `func` is an object the created callback will return `true` for elements\n   * that contain the equivalent object properties, otherwise it will return `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {*} [func=identity] The value to convert to a callback.\n   * @param {*} [thisArg] The `this` binding of the created callback.\n   * @param {number} [argCount] The number of arguments the callback accepts.\n   * @returns {Function} Returns a callback function.\n   * @example\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36 },\n   *   { 'name': 'fred',   'age': 40 }\n   * ];\n   *\n   * // wrap to create custom callback shorthands\n   * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n   *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n   *   return !match ? func(callback, thisArg) : function(object) {\n   *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n   *   };\n   * });\n   *\n   * _.filter(characters, 'age__gt38');\n   * // => [{ 'name': 'fred', 'age': 40 }]\n   */\n  function createCallback(func, thisArg, argCount) {\n    var type = typeof func;\n    if (func == null || type == 'function') {\n      return baseCreateCallback(func, thisArg, argCount);\n    }\n    // handle \"_.pluck\" style callback shorthands\n    if (type != 'object') {\n      return property(func);\n    }\n    var props = keys(func),\n        key = props[0],\n        a = func[key];\n\n    // handle \"_.where\" style callback shorthands\n    if (props.length == 1 && a === a && !isObject(a)) {\n      // fast path the common case of providing an object with a single\n      // property containing a primitive value\n      return function(object) {\n        var b = object[key];\n        return a === b && (a !== 0 || (1 / a == 1 / b));\n      };\n    }\n    return function(object) {\n      var length = props.length,\n          result = false;\n\n      while (length--) {\n        if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {\n          break;\n        }\n      }\n      return result;\n    };\n  }\n\n  return createCallback;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/collections/map',['../functions/createCallback', '../objects/forOwn'], function(createCallback, forOwn) {\n\n  /**\n   * Creates an array of values by running each element in the collection\n   * through the callback. The callback is bound to `thisArg` and invoked with\n   * three arguments; (value, index|key, collection).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @alias collect\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to iterate over.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new array of the results of each `callback` execution.\n   * @example\n   *\n   * _.map([1, 2, 3], function(num) { return num * 3; });\n   * // => [3, 6, 9]\n   *\n   * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n   * // => [3, 6, 9] (property order is not guaranteed across environments)\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 36 },\n   *   { 'name': 'fred',   'age': 40 }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.map(characters, 'name');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, callback, thisArg) {\n    var index = -1,\n        length = collection ? collection.length : 0;\n\n    callback = createCallback(callback, thisArg, 3);\n    if (typeof length == 'number') {\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = callback(collection[index], index, collection);\n      }\n    } else {\n      result = [];\n      forOwn(collection, function(value, key, collection) {\n        result[++index] = callback(value, key, collection);\n      });\n    }\n    return result;\n  }\n\n  return map;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/arrays/flatten',['../internals/baseFlatten', '../collections/map'], function(baseFlatten, map) {\n\n  /**\n   * Flattens a nested array (the nesting can be to any depth). If `isShallow`\n   * is truey, the array will only be flattened a single level. If a callback\n   * is provided each element of the array is passed through the callback before\n   * flattening. The callback is bound to `thisArg` and invoked with three\n   * arguments; (value, index, array).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to flatten.\n   * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.\n   * @param {Function|Object|string} [callback=identity] The function called\n   *  per iteration. If a property name or object is provided it will be used\n   *  to create a \"_.pluck\" or \"_.where\" style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Array} Returns a new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2], [3, [[4]]]]);\n   * // => [1, 2, 3, 4];\n   *\n   * _.flatten([1, [2], [3, [[4]]]], true);\n   * // => [1, 2, 3, [[4]]];\n   *\n   * var characters = [\n   *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },\n   *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.flatten(characters, 'pets');\n   * // => ['hoppy', 'baby puss', 'dino']\n   */\n  function flatten(array, isShallow, callback, thisArg) {\n    // juggle arguments\n    if (typeof isShallow != 'boolean' && isShallow != null) {\n      thisArg = callback;\n      callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;\n      isShallow = false;\n    }\n    if (callback != null) {\n      array = map(array, callback, thisArg);\n    }\n    return baseFlatten(array, isShallow);\n  }\n\n  return flatten;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/values',['./keys'], function(keys) {\n\n  /**\n   * Creates an array composed of the own enumerable property values of `object`.\n   *\n   * @static\n   * @memberOf _\n   * @category Objects\n   * @param {Object} object The object to inspect.\n   * @returns {Array} Returns an array of property values.\n   * @example\n   *\n   * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n   * // => [1, 2, 3] (property order is not guaranteed across environments)\n   */\n  function values(object) {\n    var index = -1,\n        props = keys(object),\n        length = props.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = object[props[index]];\n    }\n    return result;\n  }\n\n  return values;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/collections/toArray',['../objects/isString', '../internals/slice', '../objects/values'], function(isString, slice, values) {\n\n  /**\n   * Converts the `collection` to an array.\n   *\n   * @static\n   * @memberOf _\n   * @category Collections\n   * @param {Array|Object|string} collection The collection to convert.\n   * @returns {Array} Returns the new converted array.\n   * @example\n   *\n   * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n   * // => [2, 3, 4]\n   */\n  function toArray(collection) {\n    if (collection && typeof collection.length == 'number') {\n      return slice(collection);\n    }\n    return values(collection);\n  }\n\n  return toArray;\n});\n\n","define('element',['lodash-amd/modern/collections/contains'], function (contains) {\n\n  'use strict';\n\n  var blockElementNames = ['ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'CANVAS', 'DD',\n                           'DIV', 'FIELDSET', 'FIGCAPTION', 'FIGURE', 'FOOTER', 'FORM', 'H1',\n                           'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER', 'HGROUP', 'HR', 'LI',\n                           'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TD',\n                           'TH', 'TFOOT', 'UL', 'VIDEO'];\n  function isBlockElement(node) {\n    return contains(blockElementNames, node.nodeName);\n  }\n\n  function isSelectionMarkerNode(node) {\n    return (node.nodeType === Node.ELEMENT_NODE && node.className === 'scribe-marker');\n  }\n\n  function isCaretPositionNode(node) {\n    return (node.nodeType === Node.ELEMENT_NODE && node.className === 'caret-position');\n  }\n\n  function unwrap(node, childNode) {\n    while (childNode.childNodes.length > 0) {\n      node.insertBefore(childNode.childNodes[0], childNode);\n    }\n    node.removeChild(childNode);\n  }\n\n  return {\n    isBlockElement: isBlockElement,\n    isSelectionMarkerNode: isSelectionMarkerNode,\n    isCaretPositionNode: isCaretPositionNode,\n    unwrap: unwrap\n  };\n\n});\n\n","define('node',[], function () {\n\n  'use strict';\n\n  function isEmptyTextNode(node) {\n    return (node.nodeType === Node.TEXT_NODE && node.textContent === '');\n  }\n\n  function insertAfter(newNode, referenceNode) {\n    return referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  }\n\n  function removeNode(node) {\n    return node.parentNode.removeChild(node);\n  }\n\n  return {\n    isEmptyTextNode: isEmptyTextNode,\n    insertAfter: insertAfter,\n    removeNode: removeNode\n  };\n\n});\n\n","define('dom-observer',[\n  'lodash-amd/modern/arrays/flatten',\n  'lodash-amd/modern/collections/toArray',\n  './element',\n  './node'\n], function (\n  flatten,\n  toArray,\n  elementHelpers,\n  nodeHelpers\n) {\n\n  function observeDomChanges(el, callback) {\n    function includeRealMutations(mutations) {\n      var allChangedNodes = flatten(mutations.map(function(mutation) {\n        var added   = toArray(mutation.addedNodes);\n        var removed = toArray(mutation.removedNodes);\n        return added.concat(removed);\n      }));\n\n      var realChangedNodes = allChangedNodes.\n        filter(function(n) { return ! nodeHelpers.isEmptyTextNode(n); }).\n        filter(function(n) { return ! elementHelpers.isSelectionMarkerNode(n); });\n\n      return realChangedNodes.length > 0;\n    }\n\n    var MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\n    \n    // Flag to avoid running recursively\n    var runningPostMutation = false;\n\n    var observer = new MutationObserver(function(mutations) {\n      if (! runningPostMutation && includeRealMutations(mutations)) {\n        runningPostMutation = true;\n\n        try {\n          callback();\n        } catch(e) {\n          // The catch block is required but we don't want to swallow the error\n          throw e;\n        } finally {\n          // We must yield to let any mutation we caused be triggered\n          // in the next cycle\n          setTimeout(function() {\n            runningPostMutation = false;\n          }, 0);\n        }\n      }\n    });\n\n    observer.observe(el, {\n      attributes: true,\n      childList: true,\n      subtree: true\n    });\n\n    return observer;\n  }\n\n  return observeDomChanges;\n});\n\n","define('plugins/core/events',[\n  'lodash-amd/modern/collections/contains',\n  '../../dom-observer'\n], function (\n  contains,\n  observeDomChanges\n) {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      /**\n       * Push the first history item when the editor is focused.\n       */\n      var pushHistoryOnFocus = function () {\n        // Tabbing into the editor doesn't create a range immediately, so we\n        // have to wait until the next event loop.\n        setTimeout(function () {\n          scribe.pushHistory();\n        }.bind(scribe), 0);\n\n        scribe.el.removeEventListener('focus', pushHistoryOnFocus);\n      }.bind(scribe);\n      scribe.el.addEventListener('focus', pushHistoryOnFocus);\n\n      /**\n       * Firefox: Giving focus to a `contenteditable` will place the caret\n       * outside of any block elements. Chrome behaves correctly by placing the\n       * caret at the  earliest point possible inside the first block element.\n       * As per: http://jsbin.com/eLoFOku/1/edit?js,console,output\n       *\n       * We detect when this occurs and fix it by placing the caret ourselves.\n       */\n      scribe.el.addEventListener('focus', function placeCaretOnFocus() {\n        var selection = new scribe.api.Selection();\n        // In Chrome, the range is not created on or before this event loop.\n        // It doesn’t matter because this is a fix for Firefox.\n        if (selection.range) {\n\n          var isFirefoxBug = scribe.allowsBlockElements() &&\n                  selection.range.startContainer === scribe.el;\n\n          if (isFirefoxBug) {\n            var focusElement = getFirstDeepestChild(scribe.el.firstChild);\n\n            var range = selection.range;\n\n            range.setStart(focusElement, 0);\n            range.setEnd(focusElement, 0);\n\n            selection.selection.removeAllRanges();\n            selection.selection.addRange(range);\n          }\n        }\n\n        function getFirstDeepestChild(node) {\n          var treeWalker = document.createTreeWalker(node, NodeFilter.SHOW_ALL, null, false);\n          var previousNode = treeWalker.currentNode;\n          if (treeWalker.firstChild()) {\n            // TODO: build list of non-empty elements (used elsewhere)\n            // Do not include non-empty elements\n            if (treeWalker.currentNode.nodeName === 'BR') {\n              return previousNode;\n            } else {\n              return getFirstDeepestChild(treeWalker.currentNode);\n            }\n          } else {\n            return treeWalker.currentNode;\n          }\n        }\n      }.bind(scribe));\n\n      /**\n       * Apply the formatters when there is a DOM mutation.\n       */\n      var applyFormatters = function() {\n        if (!scribe._skipFormatters) {\n          var selection = new scribe.api.Selection();\n          var isEditorActive = selection.range;\n\n          var runFormatters = function () {\n            if (isEditorActive) {\n              selection.placeMarkers();\n            }\n            scribe.setHTML(scribe._htmlFormatterFactory.format(scribe.getHTML()));\n            selection.selectMarkers();\n          }.bind(scribe);\n\n          // We only want to wrap the formatting in a transaction if the editor is\n          // active. If the DOM is mutated when the editor isn't active (e.g.\n          // `scribe.setContent`), we do not want to push to the history. (This\n          // happens on the first `focus` event).\n          if (isEditorActive) {\n            // Discard the last history item, as we're going to be adding\n            // a new clean history item next.\n            scribe.undoManager.undo();\n\n            // Pass content through formatters, place caret back\n            scribe.transactionManager.run(runFormatters);\n          } else {\n            runFormatters();\n          }\n\n        }\n\n        delete scribe._skipFormatters;\n      }.bind(scribe);\n\n      observeDomChanges(scribe.el, applyFormatters);\n\n      // TODO: disconnect on tear down:\n      // observer.disconnect();\n\n      /**\n       * If the paragraphs option is set to true, we need to manually handle\n       * keyboard navigation inside a heading to ensure a P element is created.\n       */\n      if (scribe.allowsBlockElements()) {\n        scribe.el.addEventListener('keydown', function (event) {\n          if (event.keyCode === 13) { // enter\n\n            var selection = new scribe.api.Selection();\n            var range = selection.range;\n\n            var headingNode = selection.getContaining(function (node) {\n              return (/^(H[1-6])$/).test(node.nodeName);\n            });\n\n            /**\n             * If we are at the end of the heading, insert a P. Otherwise handle\n             * natively.\n             */\n            if (headingNode && range.collapsed) {\n              var contentToEndRange = range.cloneRange();\n              contentToEndRange.setEndAfter(headingNode, 0);\n\n              // Get the content from the range to the end of the heading\n              var contentToEndFragment = contentToEndRange.cloneContents();\n\n              if (contentToEndFragment.firstChild.textContent === '') {\n                event.preventDefault();\n\n                scribe.transactionManager.run(function () {\n                  // Default P\n                  // TODO: Abstract somewhere\n                  var pNode = document.createElement('p');\n                  var brNode = document.createElement('br');\n                  pNode.appendChild(brNode);\n\n                  headingNode.parentNode.insertBefore(pNode, headingNode.nextElementSibling);\n\n                  // Re-apply range\n                  range.setStart(pNode, 0);\n                  range.setEnd(pNode, 0);\n\n                  selection.selection.removeAllRanges();\n                  selection.selection.addRange(range);\n                });\n              }\n            }\n          }\n        });\n      }\n\n      /**\n       * If the paragraphs option is set to true, we need to manually handle\n       * keyboard navigation inside list item nodes.\n       */\n      if (scribe.allowsBlockElements()) {\n        scribe.el.addEventListener('keydown', function (event) {\n          if (event.keyCode === 13 || event.keyCode === 8) { // enter || backspace\n\n            var selection = new scribe.api.Selection();\n            var range = selection.range;\n\n            if (range.collapsed) {\n              var containerLIElement = selection.getContaining(function (node) {\n                return node.nodeName === 'LI';\n              });\n              if (containerLIElement && containerLIElement.textContent.trim() === '') {\n                /**\n                 * LIs\n                 */\n\n                event.preventDefault();\n\n                var listNode = selection.getContaining(function (node) {\n                  return node.nodeName === 'UL' || node.nodeName === 'OL';\n                });\n\n                var command = scribe.getCommand(listNode.nodeName === 'OL' ? 'insertOrderedList' : 'insertUnorderedList');\n\n                command.execute();\n              }\n            }\n          }\n        });\n      }\n\n      /**\n       * We have to hijack the paste event to ensure it uses\n       * `scribe.insertHTML`, which executes the Scribe version of the command\n       * and also runs the formatters.\n       */\n\n      /**\n       * TODO: could we implement this as a polyfill for `event.clipboardData` instead?\n       * I also don't like how it has the authority to perform `event.preventDefault`.\n       */\n\n      scribe.el.addEventListener('paste', function handlePaste(event) {\n        /**\n         * Browsers without the Clipboard API (specifically `ClipboardEvent.clipboardData`)\n         * will execute the second branch here.\n         */\n        if (event.clipboardData) {\n          event.preventDefault();\n\n          if (contains(event.clipboardData.types, 'text/html')) {\n\n            scribe.insertHTML(event.clipboardData.getData('text/html'));\n          } else {\n            scribe.insertPlainText(event.clipboardData.getData('text/plain'));\n          }\n        } else {\n          /**\n           * If the browser doesn't have `ClipboardEvent.clipboardData`, we run through a\n           * sequence of events:\n           *\n           *   - Save the text selection\n           *   - Focus another, hidden textarea so we paste there\n           *   - Copy the pasted content of said textarea\n           *   - Give focus back to the scribe\n           *   - Restore the text selection\n           *\n           * This is required because, without access to the Clipboard API, there is literally\n           * no other way to manipulate content on paste.\n           * As per: https://github.com/jejacks0n/mercury/issues/23#issuecomment-2308347\n           *\n           * Firefox <= 21\n           * https://developer.mozilla.org/en-US/docs/Web/API/ClipboardEvent.clipboardData\n           */\n\n          var selection = new scribe.api.Selection();\n\n          // Store the caret position\n          selection.placeMarkers();\n\n          var bin = document.createElement('div');\n          document.body.appendChild(bin);\n          bin.setAttribute('contenteditable', true);\n          bin.focus();\n\n          // Wait for the paste to happen (next loop?)\n          setTimeout(function () {\n            var data = bin.innerHTML;\n            bin.parentNode.removeChild(bin);\n\n            // Restore the caret position\n            selection.selectMarkers();\n            /**\n             * Firefox 19 (and maybe others): even though the applied range\n             * exists within the Scribe instance, we need to focus it.\n             */\n            scribe.el.focus();\n\n            scribe.insertHTML(data);\n          }, 1);\n        }\n      });\n\n    };\n  };\n});\n\n","define('plugins/core/formatters/html/replace-nbsp-chars',[],function () {\n\n  /**\n   * Chrome:\n   */\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var nbspCharRegExp = /(\\s|&nbsp;)+/g;\n\n      // TODO: should we be doing this on paste?\n      scribe.registerHTMLFormatter('export', function (html) {\n        return html.replace(nbspCharRegExp, ' ');\n      });\n    };\n  };\n\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/arrays/last',['../functions/createCallback', '../internals/slice'], function(createCallback, slice) {\n\n  /** Used as a safe reference for `undefined` in pre ES5 environments */\n  var undefined;\n\n  /* Native method shortcuts for methods with the same name as other `lodash` methods */\n  var nativeMax = Math.max;\n\n  /**\n   * Gets the last element or last `n` elements of an array. If a callback is\n   * provided elements at the end of the array are returned as long as the\n   * callback returns truey. The callback is bound to `thisArg` and invoked\n   * with three arguments; (value, index, array).\n   *\n   * If a property name is provided for `callback` the created \"_.pluck\" style\n   * callback will return the property value of the given element.\n   *\n   * If an object is provided for `callback` the created \"_.where\" style callback\n   * will return `true` for elements that have the properties of the given object,\n   * else `false`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to query.\n   * @param {Function|Object|number|string} [callback] The function called\n   *  per element or the number of elements to return. If a property name or\n   *  object is provided it will be used to create a \"_.pluck\" or \"_.where\"\n   *  style callback, respectively.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {*} Returns the last element(s) of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   *\n   * _.last([1, 2, 3], 2);\n   * // => [2, 3]\n   *\n   * _.last([1, 2, 3], function(num) {\n   *   return num > 1;\n   * });\n   * // => [2, 3]\n   *\n   * var characters = [\n   *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },\n   *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },\n   *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }\n   * ];\n   *\n   * // using \"_.pluck\" callback shorthand\n   * _.pluck(_.last(characters, 'blocked'), 'name');\n   * // => ['fred', 'pebbles']\n   *\n   * // using \"_.where\" callback shorthand\n   * _.last(characters, { 'employer': 'na' });\n   * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]\n   */\n  function last(array, callback, thisArg) {\n    var n = 0,\n        length = array ? array.length : 0;\n\n    if (typeof callback != 'number' && callback != null) {\n      var index = length;\n      callback = createCallback(callback, thisArg, 3);\n      while (index-- && callback(array[index], index, array)) {\n        n++;\n      }\n    } else {\n      n = callback;\n      if (n == null || thisArg) {\n        return array ? array[length - 1] : undefined;\n      }\n    }\n    return slice(array, nativeMax(0, length - n));\n  }\n\n  return last;\n});\n\n","define('plugins/core/formatters/html/enforce-p-elements',[\n  'lodash-amd/modern/arrays/last'\n], function (\n  last\n) {\n\n  /**\n   * Chrome and Firefox: Upon pressing backspace inside of a P, the\n   * browser deletes the paragraph element, leaving the caret (and any\n   * content) outside of any P.\n   *\n   * Firefox: Erasing across multiple paragraphs, or outside of a\n   * whole paragraph (e.g. by ‘Select All’) will leave content outside\n   * of any P.\n   *\n   * Entering a new line in a pristine state state will insert\n   * `<div>`s (in Chrome) or `<br>`s (in Firefox) where previously we\n   * had `<p>`'s. This patches the behaviour of delete/backspace so\n   * that we do not end up in a pristine state.\n   */\n\n  'use strict';\n\n  /**\n   * Wrap consecutive inline elements and text nodes in a P element.\n   */\n  function wrapChildNodes(scribe, parentNode) {\n    var groups = Array.prototype.reduce.call(parentNode.childNodes,\n                                             function (accumulator, binChildNode) {\n      var group = last(accumulator);\n      if (! group) {\n        startNewGroup();\n      } else {\n        var isBlockGroup = scribe.element.isBlockElement(group[0]);\n        if (isBlockGroup === scribe.element.isBlockElement(binChildNode)) {\n          group.push(binChildNode);\n        } else {\n          startNewGroup();\n        }\n      }\n\n      return accumulator;\n\n      function startNewGroup() {\n        var newGroup = [binChildNode];\n        accumulator.push(newGroup);\n      }\n    }, []);\n\n    var consecutiveInlineElementsAndTextNodes = groups.filter(function (group) {\n      var isBlockGroup = scribe.element.isBlockElement(group[0]);\n      return ! isBlockGroup;\n    });\n\n    consecutiveInlineElementsAndTextNodes.forEach(function (nodes) {\n      var pElement = document.createElement('p');\n      nodes[0].parentNode.insertBefore(pElement, nodes[0]);\n      nodes.forEach(function (node) {\n        pElement.appendChild(node);\n      });\n    });\n\n    parentNode._isWrapped = true;\n  }\n\n  // Traverse the tree, wrapping child nodes as we go.\n  function traverse(scribe, parentNode) {\n    var treeWalker = document.createTreeWalker(parentNode, NodeFilter.SHOW_ELEMENT, null, false);\n    var node = treeWalker.firstChild();\n\n    // FIXME: does this recurse down?\n\n    while (node) {\n      // TODO: At the moment we only support BLOCKQUOTEs. See failing\n      // tests.\n      if (node.nodeName === 'BLOCKQUOTE' && ! node._isWrapped) {\n        wrapChildNodes(scribe, node);\n        traverse(scribe, parentNode);\n        break;\n      }\n      node = treeWalker.nextSibling();\n    }\n  }\n\n  return function () {\n    return function (scribe) {\n\n      scribe.registerHTMLFormatter('normalize', function (html) {\n        /**\n         * Ensure P mode.\n         *\n         * Wrap any orphan text nodes in a P element.\n         */\n        // TODO: This should be configurable and also correct markup such as\n        // `<ul>1</ul>` to <ul><li>2</li></ul>`. See skipped tests.\n        // TODO: This should probably be a part of HTML Janitor, or some other\n        // formatter.\n        var bin = document.createElement('div');\n        bin.innerHTML = html;\n\n        wrapChildNodes(scribe, bin);\n        traverse(scribe, bin);\n\n        return bin.innerHTML;\n      });\n\n    };\n  };\n\n});\n\n","define('plugins/core/formatters/html/ensure-selectable-containers',[\n    '../../../../element',\n    'lodash-amd/modern/collections/contains'\n  ], function (\n    element,\n    contains\n  ) {\n\n  /**\n   * Chrome and Firefox: All elements need to contain either text or a `<br>` to\n   * remain selectable. (Unless they have a width and height explicitly set with\n   * CSS(?), as per: http://jsbin.com/gulob/2/edit?html,css,js,output)\n   */\n\n  'use strict';\n\n  // http://www.w3.org/TR/html-markup/syntax.html#syntax-elements\n  var html5VoidElements = ['AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT', 'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\n\n  function parentHasNoTextContent(element, node) {\n    if (element.isCaretPositionNode(node)) {\n      return true;\n    } else {\n      return node.parentNode.textContent.trim() === '';\n    }\n  }\n\n\n  function traverse(element, parentNode) {\n    // Instead of TreeWalker, which gets confused when the BR is added to the dom,\n    // we recursively traverse the tree to look for an empty node that can have childNodes\n\n    var node = parentNode.firstElementChild;\n\n    function isEmpty(node) {\n\n      if ((node.children.length === 0 && element.isBlockElement(node))\n        || (node.children.length === 1 && element.isSelectionMarkerNode(node.children[0]))) {\n         return true;\n      }\n\n      // Do not insert BR in empty non block elements with parent containing text\n      if (!element.isBlockElement(node) && node.children.length === 0) {\n        return parentHasNoTextContent(element, node);\n      }\n\n      return false;\n    }\n\n    while (node) {\n      if (!element.isSelectionMarkerNode(node)) {\n        // Find any node that contains no child *elements*, or just contains\n        // whitespace, and is not self-closing\n        if (isEmpty(node) &&\n          node.textContent.trim() === '' &&\n          !contains(html5VoidElements, node.nodeName)) {\n          node.appendChild(document.createElement('br'));\n        } else if (node.children.length > 0) {\n          traverse(element, node);\n        }\n      }\n      node = node.nextElementSibling;\n    }\n  }\n\n  return function () {\n    return function (scribe) {\n\n      scribe.registerHTMLFormatter('normalize', function (html) {\n        var bin = document.createElement('div');\n        bin.innerHTML = html;\n\n        traverse(scribe.element, bin);\n\n        return bin.innerHTML;\n      });\n\n    };\n  };\n\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/htmlEscapes',[], function() {\n\n  /**\n   * Used to convert characters to HTML entities:\n   *\n   * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n   * don't require escaping in HTML and have no special meaning unless they're part\n   * of a tag or an unquoted attribute value.\n   * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")\n   */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  return htmlEscapes;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/escapeHtmlChar',['./htmlEscapes'], function(htmlEscapes) {\n\n  /**\n   * Used by `escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} match The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(match) {\n    return htmlEscapes[match];\n  }\n\n  return escapeHtmlChar;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/internals/reUnescapedHtml',['./htmlEscapes', '../objects/keys'], function(htmlEscapes, keys) {\n\n  /** Used to match HTML entities and HTML characters */\n  var reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');\n\n  return reUnescapedHtml;\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/utilities/escape',['../internals/escapeHtmlChar', '../objects/keys', '../internals/reUnescapedHtml'], function(escapeHtmlChar, keys, reUnescapedHtml) {\n\n  /**\n   * Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n   * corresponding HTML entities.\n   *\n   * @static\n   * @memberOf _\n   * @category Utilities\n   * @param {string} string The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('Fred, Wilma, & Pebbles');\n   * // => 'Fred, Wilma, &amp; Pebbles'\n   */\n  function escape(string) {\n    return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);\n  }\n\n  return escape;\n});\n\n","define('plugins/core/formatters/plain-text/escape-html-characters',[\n  'lodash-amd/modern/utilities/escape'\n], function (\n  escape\n) {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      scribe.registerPlainTextFormatter(escape);\n    };\n  };\n\n});\n\n","define('plugins/core/inline-elements-mode',[],function () {\n\n  'use strict';\n\n  // TODO: abstract\n  function hasContent(rootNode) {\n    var treeWalker = document.createTreeWalker(rootNode, NodeFilter.SHOW_ALL, null, false);\n\n    while (treeWalker.nextNode()) {\n      if (treeWalker.currentNode) {\n        // If the node is a non-empty element or has content\n        if (~['br'].indexOf(treeWalker.currentNode.nodeName.toLowerCase()) || treeWalker.currentNode.length > 0) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return function () {\n    return function (scribe) {\n      /**\n       * Firefox has a `insertBrOnReturn` command, but this is not a part of\n       * any standard. One day we might have an `insertLineBreak` command,\n       * proposed by this spec:\n       * https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html#the-insertlinebreak-command\n       * As per: http://jsbin.com/IQUraXA/1/edit?html,js,output\n       */\n      scribe.el.addEventListener('keydown', function (event) {\n        if (event.keyCode === 13) { // enter\n          var selection = new scribe.api.Selection();\n          var range = selection.range;\n\n          var blockNode = selection.getContaining(function (node) {\n            return node.nodeName === 'LI' || (/^(H[1-6])$/).test(node.nodeName);\n          });\n\n          if (! blockNode) {\n            event.preventDefault();\n\n            scribe.transactionManager.run(function () {\n              /**\n               * Firefox: Delete the bogus BR as we insert another one later.\n               * We have to do this because otherwise the browser will believe\n               * there is content to the right of the selection.\n               */\n              if (scribe.el.lastChild.nodeName === 'BR') {\n                scribe.el.removeChild(scribe.el.lastChild);\n              }\n\n              var brNode = document.createElement('br');\n\n              range.insertNode(brNode);\n              // After inserting the BR into the range is no longer collapsed, so\n              // we have to collapse it again.\n              // TODO: Older versions of Firefox require this argument even though\n              // it is supposed to be optional. Proxy/polyfill?\n              range.collapse(false);\n\n              /**\n               * Chrome: If there is no right-hand side content, inserting a BR\n               * will not appear to create a line break.\n               * Firefox: If there is no right-hand side content, inserting a BR\n               * will appear to create a weird \"half-line break\".\n               *\n               * Possible solution: Insert two BRs.\n               * ✓ Chrome: Inserting two BRs appears to create a line break.\n               * Typing will then delete the bogus BR element.\n               * Firefox: Inserting two BRs will create two line breaks.\n               *\n               * Solution: Only insert two BRs if there is no right-hand\n               * side content.\n               *\n               * If the user types on a line immediately after a BR element,\n               * Chrome will replace the BR element with the typed characters,\n               * whereas Firefox will not. Thus, to satisfy Firefox we have to\n               * insert a bogus BR element on initialization (see below).\n               */\n\n              var contentToEndRange = range.cloneRange();\n              contentToEndRange.setEndAfter(scribe.el.lastChild, 0);\n\n              // Get the content from the range to the end of the heading\n              var contentToEndFragment = contentToEndRange.cloneContents();\n\n              // If there is not already a right hand side content we need to\n              // insert a bogus BR element.\n              if (! hasContent(contentToEndFragment)) {\n                var bogusBrNode = document.createElement('br');\n                range.insertNode(bogusBrNode);\n              }\n\n              var newRange = range.cloneRange();\n\n              newRange.setStartAfter(brNode, 0);\n              newRange.setEndAfter(brNode, 0);\n\n              selection.selection.removeAllRanges();\n              selection.selection.addRange(newRange);\n            });\n          }\n        }\n      }.bind(this));\n\n      if (scribe.getHTML().trim() === '') {\n        // Bogus BR element for Firefox — see explanation above.\n        // TODO: also append when consumer sets the content manually.\n        // TODO: hide when the user calls `getHTML`?\n        scribe.setContent('');\n      }\n    };\n  };\n});\n\n","define('plugins/core/patches/commands/bold',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var boldCommand = new scribe.api.CommandPatch('bold');\n\n      /**\n       * Chrome: Executing the bold command inside a heading corrupts the markup.\n       * Disabling for now.\n       */\n      boldCommand.queryEnabled = function () {\n        var selection = new scribe.api.Selection();\n        var headingNode = selection.getContaining(function (node) {\n          return (/^(H[1-6])$/).test(node.nodeName);\n        });\n\n        return scribe.api.CommandPatch.prototype.queryEnabled.apply(this, arguments) && ! headingNode;\n      };\n\n      // TODO: We can't use STRONGs because this would mean we have to\n      // re-implement the `queryState` command, which would be difficult.\n\n      scribe.commandPatches.bold = boldCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/patches/commands/indent',[],function () {\n\n  /**\n   * Prevent Chrome from inserting BLOCKQUOTEs inside of Ps, and also from\n   * adding a redundant `style` attribute to the created BLOCKQUOTE.\n   */\n\n  'use strict';\n\n  var INVISIBLE_CHAR = '\\uFEFF';\n\n  return function () {\n    return function (scribe) {\n      var indentCommand = new scribe.api.CommandPatch('indent');\n\n      indentCommand.execute = function (value) {\n        scribe.transactionManager.run(function () {\n          /**\n           * Chrome: If we apply the indent command on an empty P, the\n           * BLOCKQUOTE will be nested inside the P.\n           * As per: http://jsbin.com/oDOriyU/3/edit?html,js,output\n           */\n          var selection = new scribe.api.Selection();\n          var range = selection.range;\n\n          var isCaretOnNewLine =\n              (range.commonAncestorContainer.nodeName === 'P'\n               && range.commonAncestorContainer.innerHTML === '<br>');\n          if (isCaretOnNewLine) {\n            // FIXME: this text node is left behind. Tidy it up somehow,\n            // or don't use it at all.\n            var textNode = document.createTextNode(INVISIBLE_CHAR);\n\n            range.insertNode(textNode);\n\n            range.setStart(textNode, 0);\n            range.setEnd(textNode, 0);\n\n            selection.selection.removeAllRanges();\n            selection.selection.addRange(range);\n          }\n\n          scribe.api.CommandPatch.prototype.execute.call(this, value);\n\n          /**\n           * Chrome: The BLOCKQUOTE created contains a redundant style attribute.\n           * As per: http://jsbin.com/AkasOzu/1/edit?html,js,output\n           */\n\n          // Renew the selection\n          selection = new scribe.api.Selection();\n          var blockquoteNode = selection.getContaining(function (node) {\n            return node.nodeName === 'BLOCKQUOTE';\n          });\n\n          if (blockquoteNode) {\n            blockquoteNode.removeAttribute('style');\n          }\n        }.bind(this));\n      };\n\n      scribe.commandPatches.indent = indentCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/patches/commands/insert-html',[], function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var insertHTMLCommandPatch = new scribe.api.CommandPatch('insertHTML');\n      var element = scribe.element;\n\n      insertHTMLCommandPatch.execute = function (value) {\n        scribe.transactionManager.run(function () {\n          scribe.api.CommandPatch.prototype.execute.call(this, value);\n\n          /**\n           * Chrome: If a parent node has a CSS `line-height` when we apply the\n           * insertHTML command, Chrome appends a SPAN to plain content with\n           * inline styling replicating that `line-height`, and adjusts the\n           * `line-height` on inline elements.\n           * As per: http://jsbin.com/ilEmudi/4/edit?css,js,output\n           *\n           * FIXME: what if the user actually wants to use SPANs? This could\n           * cause conflicts.\n           */\n\n          // TODO: share somehow with similar event patch for P nodes\n          sanitize(scribe.el);\n\n          function sanitize(parentNode) {\n            var treeWalker = document.createTreeWalker(parentNode, NodeFilter.SHOW_ELEMENT, null, false);\n            var node = treeWalker.firstChild();\n            if (!node) { return; }\n\n            do {\n              if (node.nodeName === 'SPAN') {\n                element.unwrap(parentNode, node);\n              } else {\n                /**\n                 * If the list item contains inline elements such as\n                 * A, B, or I, Chrome will also append an inline style for\n                 * `line-height` on those elements, so we remove it here.\n                 */\n                node.style.lineHeight = null;\n\n                // There probably wasn’t a `style` attribute before, so\n                // remove it if it is now empty.\n                if (node.getAttribute('style') === '') {\n                  node.removeAttribute('style');\n                }\n              }\n\n              // Sanitize children\n              sanitize(node);\n            } while ((node = treeWalker.nextSibling()));\n          }\n        }.bind(this));\n      };\n\n      scribe.commandPatches.insertHTML = insertHTMLCommandPatch;\n    };\n  };\n\n});\n\n","define('plugins/core/patches/commands/insert-list',[], function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var element = scribe.element;\n      var nodeHelpers = scribe.node;\n\n      var InsertListCommandPatch = function (commandName) {\n        scribe.api.CommandPatch.call(this, commandName);\n      };\n\n      InsertListCommandPatch.prototype = Object.create(scribe.api.CommandPatch.prototype);\n      InsertListCommandPatch.prototype.constructor = InsertListCommandPatch;\n\n      InsertListCommandPatch.prototype.execute = function (value) {\n        scribe.transactionManager.run(function () {\n          scribe.api.CommandPatch.prototype.execute.call(this, value);\n\n          if (this.queryState()) {\n            var selection = new scribe.api.Selection();\n\n            var listElement = selection.getContaining(function (node) {\n              return node.nodeName === 'OL' || node.nodeName === 'UL';\n            });\n\n\n            /**\n             * Firefox: If we apply the insertOrderedList or the insertUnorderedList\n             * command on an empty block, a P will be inserted after the OL/UL.\n             * As per: http://jsbin.com/cubacoli/3/edit?html,js,output\n             */\n\n            if (listElement.nextElementSibling &&\n                listElement.nextElementSibling.childNodes.length === 0) {\n              nodeHelpers.removeNode(listElement.nextElementSibling);\n            }\n\n            /**\n             * Chrome: If we apply the insertOrderedList or the insertUnorderedList\n             * command on an empty block, the OL/UL will be nested inside the block.\n             * As per: http://jsbin.com/eFiRedUc/1/edit?html,js,output\n             */\n\n            if (listElement) {\n              var listParentNode = listElement.parentNode;\n              // If list is within a text block then split that block\n              if (listParentNode && /^(H[1-6]|P)$/.test(listParentNode.nodeName)) {\n                selection.placeMarkers();\n                // Move listElement out of the block\n                nodeHelpers.insertAfter(listElement, listParentNode);\n                selection.selectMarkers();\n\n                /**\n                 * Chrome 27-34: An empty text node is inserted.\n                 */\n                if (listParentNode.childNodes.length === 2 &&\n                    nodeHelpers.isEmptyTextNode(listParentNode.firstChild)) {\n                  nodeHelpers.removeNode(listParentNode);\n                }\n\n                // Remove the block if it's empty\n                if (listParentNode.childNodes.length === 0) {\n                  nodeHelpers.removeNode(listParentNode);\n                }\n              }\n            }\n\n            /**\n             * Chrome: If a parent node has a CSS `line-height` when we apply the\n             * insertOrderedList or the insertUnorderedList command, Chrome appends\n             * a SPAN to LIs with inline styling replicating that `line-height`.\n             * As per: http://jsbin.com/OtemujAY/7/edit?html,css,js,output\n             *\n             * FIXME: what if the user actually wants to use SPANs? This could\n             * cause conflicts.\n             */\n\n            // TODO: share somehow with similar event patch for P nodes\n            var listItemElements = Array.prototype.slice.call(listElement.childNodes);\n            listItemElements.forEach(function(listItemElement) {\n              // We clone the childNodes into an Array so that it's\n              // not affected by any manipulation below when we\n              // iterate over it\n              var listItemElementChildNodes = Array.prototype.slice.call(listItemElement.childNodes);\n              listItemElementChildNodes.forEach(function(listElementChildNode) {\n                if (listElementChildNode.nodeName === 'SPAN') {\n                  // Unwrap any SPAN that has been inserted\n                  var spanElement = listElementChildNode;\n                  element.unwrap(listItemElement, spanElement);\n                } else if (listElementChildNode.nodeType === Node.ELEMENT_NODE) {\n                  /**\n                   * If the list item contains inline elements such as\n                   * A, B, or I, Chrome will also append an inline style for\n                   * `line-height` on those elements, so we remove it here.\n                   */\n                  listElementChildNode.style.lineHeight = null;\n\n                  // There probably wasn’t a `style` attribute before, so\n                  // remove it if it is now empty.\n                  if (listElementChildNode.getAttribute('style') === '') {\n                    listElementChildNode.removeAttribute('style');\n                  }\n                }\n              });\n            });\n          }\n        }.bind(this));\n      };\n\n      scribe.commandPatches.insertOrderedList = new InsertListCommandPatch('insertOrderedList');\n      scribe.commandPatches.insertUnorderedList = new InsertListCommandPatch('insertUnorderedList');\n    };\n  };\n\n});\n\n","define('plugins/core/patches/commands/outdent',[],function () {\n\n  /**\n   * Prevent Chrome from removing formatting of BLOCKQUOTE contents.\n   */\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var outdentCommand = new scribe.api.CommandPatch('outdent');\n\n      outdentCommand.execute = function () {\n        scribe.transactionManager.run(function () {\n          var selection = new scribe.api.Selection();\n          var range = selection.range;\n\n          var blockquoteNode = selection.getContaining(function (node) {\n            return node.nodeName === 'BLOCKQUOTE';\n          });\n\n          if (range.commonAncestorContainer.nodeName === 'BLOCKQUOTE') {\n            /**\n             * Chrome: Applying the outdent command when a whole BLOCKQUOTE is\n             * selected removes the formatting of its contents.\n             * As per: http://jsbin.com/okAYaHa/1/edit?html,js,output\n             */\n\n            // Insert a copy of the selection before the BLOCKQUOTE, and then\n            // restore the selection on the copy.\n            selection.placeMarkers();\n            // We want to copy the selected nodes *with* the markers\n            selection.selectMarkers(true);\n            var selectedNodes = range.cloneContents();\n            blockquoteNode.parentNode.insertBefore(selectedNodes, blockquoteNode);\n            range.deleteContents();\n            selection.selectMarkers();\n\n            // Delete the BLOCKQUOTE if it's empty\n            if (blockquoteNode.textContent === '') {\n              blockquoteNode.parentNode.removeChild(blockquoteNode);\n            }\n          } else {\n            /**\n             * Chrome: If we apply the outdent command on a P, the contents of the\n             * P will be outdented instead of the whole P element.\n             * As per: http://jsbin.com/IfaRaFO/1/edit?html,js,output\n             */\n\n            var pNode = selection.getContaining(function (node) {\n              return node.nodeName === 'P';\n            });\n\n            if (pNode) {\n              /**\n               * If we are not at the start of end of a BLOCKQUOTE, we have to\n               * split the node and insert the P in the middle.\n               */\n\n              var nextSiblingNodes = (new scribe.api.Node(pNode)).nextAll();\n\n              if (nextSiblingNodes.length) {\n                var newContainerNode = document.createElement(blockquoteNode.nodeName);\n\n                nextSiblingNodes.forEach(function (siblingNode) {\n                  newContainerNode.appendChild(siblingNode);\n                });\n\n                blockquoteNode.parentNode.insertBefore(newContainerNode, blockquoteNode.nextElementSibling);\n              }\n\n              selection.placeMarkers();\n              blockquoteNode.parentNode.insertBefore(pNode, blockquoteNode.nextElementSibling);\n              selection.selectMarkers();\n\n              // If the BLOCKQUOTE is now empty, clean it up.\n              if (blockquoteNode.innerHTML === '') {\n                blockquoteNode.parentNode.removeChild(blockquoteNode);\n              }\n            } else {\n              scribe.api.CommandPatch.prototype.execute.call(this);\n            }\n          }\n        }.bind(this));\n      };\n\n      scribe.commandPatches.outdent = outdentCommand;\n    };\n  };\n\n});\n\n","define('plugins/core/patches/commands/create-link',[],function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      var createLinkCommand = new scribe.api.CommandPatch('createLink');\n      scribe.commandPatches.createLink = createLinkCommand;\n\n      createLinkCommand.execute = function (value) {\n        var selection = new scribe.api.Selection();\n\n        /**\n         * Firefox does not create a link when selection is collapsed\n         * so we create it manually. http://jsbin.com/tutufi/2/edit?js,output\n         */\n        if (selection.selection.isCollapsed) {\n          var aElement = document.createElement('a');\n          aElement.setAttribute('href', value);\n          aElement.textContent = value;\n\n          selection.range.insertNode(aElement);\n\n          // Select the created link\n          var newRange = document.createRange();\n          newRange.setStartBefore(aElement);\n          newRange.setEndAfter(aElement);\n\n          selection.selection.removeAllRanges();\n          selection.selection.addRange(newRange);\n        } else {\n          scribe.api.CommandPatch.prototype.execute.call(this, value);\n        }\n      };\n    };\n  };\n\n});\n\n","define('plugins/core/patches/events',[], function () {\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      /**\n       * Chrome: If a parent node has a CSS `line-height` when we apply the\n       * insert(Un)OrderedList command, altering the paragraph structure by pressing\n       * <backspace> or <delete> (merging/deleting paragraphs) sometimes\n       * results in the application of a line-height attribute to the\n       * contents of the paragraph, either onto existing elements or\n       * by wrapping text in a span.\n       * As per: http://jsbin.com/isIdoKA/4/edit?html,css,js,output\n       *\n       * FIXME: what if the user actually wants to use SPANs? This could\n       * cause conflicts.\n       */\n      // TODO: do we need to run this on every key press, or could we\n      //       detect when the issue may have occurred?\n      // TODO: run in a transaction so as to record the change? how do\n      //       we know in advance whether there will be a change though?\n      // TODO: share somehow with `InsertList` command\n\n      var element = scribe.element;\n\n      if (scribe.allowsBlockElements()) {\n        scribe.el.addEventListener('keyup', function (event) {\n          if (event.keyCode === 8 || event.keyCode === 46) { // backspace or delete\n\n            var selection = new scribe.api.Selection();\n\n            // Note: the range is always collapsed on keyup here\n            var containerPElement = selection.getContaining(function (node) {\n              return node.nodeName === 'P';\n            });\n            if (containerPElement) {\n              /**\n               * The 'input' event listener has already triggered\n               * and recorded the faulty content as an item in the\n               * UndoManager.  We interfere with the undoManager\n               * here to discard that history item, and let the next\n               * transaction run produce a clean one instead.\n               *\n               * FIXME: ideally we would not trigger a\n               * 'content-changed' event with faulty HTML at all, but\n               * it's too late to cancel it at this stage (and it's\n               * not happened yet at keydown time).\n               */\n              scribe.undoManager.undo();\n\n              scribe.transactionManager.run(function () {\n                // Store the caret position\n                selection.placeMarkers();\n\n                // We clone the childNodes into an Array so that it's\n                // not affected by any manipulation below when we\n                // iterate over it\n                var pElementChildNodes = Array.prototype.slice.call(containerPElement.childNodes);\n                pElementChildNodes.forEach(function(pElementChildNode) {\n                  if (pElementChildNode.nodeName === 'SPAN') {\n                    // Unwrap any SPAN that has been inserted\n                    var spanElement = pElementChildNode;\n                    element.unwrap(containerPElement, spanElement);\n                  } else if (pElementChildNode.nodeType === Node.ELEMENT_NODE) {\n                    /**\n                     * If the paragraph contains inline elements such as\n                     * A, B, or I, Chrome will also append an inline style for\n                     * `line-height` on those elements, so we remove it here.\n                     */\n                    pElementChildNode.style.lineHeight = null;\n\n                    // There probably wasn’t a `style` attribute before, so\n                    // remove it if it is now empty.\n                    if (pElementChildNode.getAttribute('style') === '') {\n                      pElementChildNode.removeAttribute('style');\n                    }\n                  }\n                });\n\n                selection.selectMarkers();\n              });\n            }\n          }\n        });\n      }\n    };\n  };\n});\n\n","define('plugins/core/patches',[\n  './patches/commands/bold',\n  './patches/commands/indent',\n  './patches/commands/insert-html',\n  './patches/commands/insert-list',\n  './patches/commands/outdent',\n  './patches/commands/create-link',\n  './patches/events'\n], function (\n  boldCommand,\n  indentCommand,\n  insertHTMLCommand,\n  insertListCommands,\n  outdentCommand,\n  createLinkCommand,\n  events\n) {\n\n  /**\n   * Command patches browser inconsistencies. They do not perform core features\n   * of the editor, such as ensuring P elements are created when\n   * applying/unapplying commands — that is the job of the core commands.\n   */\n\n  'use strict';\n\n  return {\n    commands: {\n      bold: boldCommand,\n      indent: indentCommand,\n      insertHTML: insertHTMLCommand,\n      insertList: insertListCommands,\n      outdent: outdentCommand,\n      createLink: createLinkCommand,\n    },\n    events: events\n  };\n\n});\n\n","define('plugins/core/set-root-p-element',[],function () {\n\n  /**\n   * Sets the default content of the scribe so that each carriage return creates\n   * a P.\n   */\n\n  'use strict';\n\n  return function () {\n    return function (scribe) {\n      // The content might have already been set, in which case we don't want\n      // to apply.\n      if (scribe.getHTML().trim() === '') {\n        /**\n         * We have to begin with the following HTML, because otherwise some\n         * browsers(?) will position the caret outside of the P when the scribe is\n         * focused.\n         */\n        scribe.setContent('<p><br></p>');\n      }\n    };\n  };\n\n});\n\n","define('api/command-patch',[],function () {\n\n  'use strict';\n\n  return function (scribe) {\n    function CommandPatch(commandName) {\n      this.commandName = commandName;\n    }\n\n    CommandPatch.prototype.execute = function (value) {\n      scribe.transactionManager.run(function () {\n        document.execCommand(this.commandName, false, value || null);\n      }.bind(this));\n    };\n\n    CommandPatch.prototype.queryState = function () {\n      return document.queryCommandState(this.commandName);\n    };\n\n    CommandPatch.prototype.queryEnabled = function () {\n      return document.queryCommandEnabled(this.commandName);\n    };\n\n    return CommandPatch;\n  };\n\n});\n\n","define('api/command',[],function () {\n\n  'use strict';\n\n  return function (scribe) {\n    function Command(commandName) {\n      this.commandName = commandName;\n      this.patch = scribe.commandPatches[this.commandName];\n    }\n\n    Command.prototype.execute = function (value) {\n      if (this.patch) {\n        this.patch.execute(value);\n      } else {\n        scribe.transactionManager.run(function () {\n          document.execCommand(this.commandName, false, value || null);\n        }.bind(this));\n      }\n    };\n\n    Command.prototype.queryState = function () {\n      if (this.patch) {\n        return this.patch.queryState();\n      } else {\n        return document.queryCommandState(this.commandName);\n      }\n    };\n\n    Command.prototype.queryEnabled = function () {\n      if (this.patch) {\n        return this.patch.queryEnabled();\n      } else {\n        return document.queryCommandEnabled(this.commandName);\n      }\n    };\n\n    return Command;\n  };\n\n});\n\n","define('api/node',[],function () {\n\n  'use strict';\n\n  function Node(node) {\n    this.node = node;\n  }\n\n  // TODO: should the return value be wrapped in one of our APIs?\n  // Node or Selection?\n  // TODO: write tests. unit or integration?\n  Node.prototype.getAncestor = function (rootElement, nodeFilter) {\n    var isTopContainerElement = function (element) {\n      return rootElement === element;\n    };\n    // TODO: should this happen here?\n    if (isTopContainerElement(this.node)) {\n      return;\n    }\n\n    var currentNode = this.node.parentNode;\n\n    // If it's a `contenteditable` then it's likely going to be the Scribe\n    // instance, so stop traversing there.\n    while (currentNode && ! isTopContainerElement(currentNode)) {\n      if (nodeFilter(currentNode)) {\n        return currentNode;\n      }\n      currentNode = currentNode.parentNode;\n    }\n  };\n\n  Node.prototype.nextAll = function () {\n    var all = [];\n    var el = this.node.nextSibling;\n    while (el) {\n      all.push(el);\n      el = el.nextSibling;\n    }\n    return all;\n  };\n\n  return Node;\n\n});\n\n","define('api/selection',[\n  '../element'\n],\nfunction (elementHelper) {\n\n  'use strict';\n\n  return function (scribe) {\n    /**\n     * Wrapper for object holding currently selected text.\n     */\n    function Selection() {\n      this.selection = window.getSelection();\n\n      if (this.selection.rangeCount) {\n        this.range = this.selection.getRangeAt(0);\n      }\n    }\n\n    /**\n     * @returns Closest ancestor Node satisfying nodeFilter. Undefined if none exist before reaching Scribe container.\n     */\n    Selection.prototype.getContaining = function (nodeFilter) {\n      var range = this.range;\n      if (!range) { return; }\n\n      var node = new scribe.api.Node(this.range.commonAncestorContainer);\n      var isTopContainerElement = node.node && scribe.el === node.node;\n\n      return ! isTopContainerElement && nodeFilter(node.node) ? node.node : node.getAncestor(scribe.el, nodeFilter);\n    };\n\n    Selection.prototype.placeMarkers = function () {\n      var range = this.range;\n      if (!range) {\n        return;\n      }\n\n      //we need to ensure that the scribe's element lives within the current document to avoid errors with the range comparison (see below)\n      //one way to do this is to check if it's visible (is this the best way?).\n      if (!scribe.el.offsetParent) {\n        return;\n      }\n\n      //we want to ensure that the current selection is within the current scribe node\n      //if this isn't true scribe will place markers within the selections parent\n      //we want to ensure that scribe ONLY places markers within it's own element\n      var scribeNodeRange = document.createRange();\n      scribeNodeRange.selectNodeContents(scribe.el);\n\n      var selectionStartWithinScribeElementStart = this.range.compareBoundaryPoints(Range.START_TO_START, scribeNodeRange) >= 0;\n      var selectionEndWithinScribeElementEnd = this.range.compareBoundaryPoints(Range.END_TO_END, scribeNodeRange) <= 0;\n\n      if (selectionStartWithinScribeElementStart && selectionEndWithinScribeElementEnd) {\n\n        var startMarker = document.createElement('em');\n        startMarker.classList.add('scribe-marker');\n        var endMarker = document.createElement('em');\n        endMarker.classList.add('scribe-marker');\n\n        // End marker\n        var rangeEnd = this.range.cloneRange();\n        rangeEnd.collapse(false);\n        rangeEnd.insertNode(endMarker);\n\n        /**\n         * Chrome and Firefox: `Range.insertNode` inserts a bogus text node after\n         * the inserted element. We just remove it. This in turn creates several\n         * bugs when perfoming commands on selections that contain an empty text\n         * node (`removeFormat`, `unlink`).\n         * As per: http://jsbin.com/hajim/5/edit?js,console,output\n         */\n        // TODO: abstract into polyfill for `Range.insertNode`\n        if (endMarker.nextSibling &&\n            endMarker.nextSibling.nodeType === Node.TEXT_NODE\n            && endMarker.nextSibling.data === '') {\n          endMarker.parentNode.removeChild(endMarker.nextSibling);\n        }\n\n\n\n        /**\n         * Chrome and Firefox: `Range.insertNode` inserts a bogus text node before\n         * the inserted element when the child element is at the start of a block\n         * element. We just remove it.\n         * FIXME: Document why we need to remove this\n         * As per: http://jsbin.com/sifez/1/edit?js,console,output\n         */\n        if (endMarker.previousSibling &&\n            endMarker.previousSibling.nodeType === Node.TEXT_NODE\n            && endMarker.previousSibling.data === '') {\n          endMarker.parentNode.removeChild(endMarker.previousSibling);\n        }\n\n\n        /**\n         * This is meant to test Chrome inserting erroneous text blocks into\n         * the scribe el when focus switches from a scribe.el to a button to\n         * the scribe.el. However, this is impossible to simlulate correctly\n         * in a test.\n         *\n         * This behaviour does not happen in Firefox.\n         *\n         * See http://jsbin.com/quhin/2/edit?js,output,console\n         *\n         * To reproduce the bug, follow the following steps:\n         *    1. Select text and create H2\n         *    2. Move cursor to front of text.\n         *    3. Remove the H2 by clicking the button\n         *    4. Observe that you are left with an empty H2\n         *        after the element.\n         *\n         * The problem is caused by the Range being different, depending on\n         * the position of the marker.\n         *\n         * Consider the following two scenarios.\n         *\n         * A)\n         *   1. scribe.el contains: [\"1\", <em>scribe-marker</em>]\n         *   2. Click button and click the right of to scribe.el\n         *   3. scribe.el contains: [\"1\", <em>scribe-marker</em>. #text]\n         *\n         *   This is wrong but does not cause the problem.\n         *\n         * B)\n         *   1. scribe.el contains: [\"1\", <em>scribe-marker</em>]\n         *   2. Click button and click to left of scribe.el\n         *   3. scribe.el contains: [#text, <em>scribe-marker</em>, \"1\"]\n         *\n         * The second example sets the range in the wrong place, meaning\n         * that in the second case the formatBlock is executed on the wrong\n         * element [the text node] leaving the empty H2 behind.\n         **/\n\n\n        if (! this.selection.isCollapsed) {\n          // Start marker\n          var rangeStart = this.range.cloneRange();\n          rangeStart.collapse(true);\n          rangeStart.insertNode(startMarker);\n\n          /**\n           * Chrome and Firefox: `Range.insertNode` inserts a bogus text node after\n           * the inserted element. We just remove it. This in turn creates several\n           * bugs when perfoming commands on selections that contain an empty text\n           * node (`removeFormat`, `unlink`).\n           * As per: http://jsbin.com/hajim/5/edit?js,console,output\n           */\n          // TODO: abstract into polyfill for `Range.insertNode`\n          if (startMarker.nextSibling &&\n              startMarker.nextSibling.nodeType === Node.TEXT_NODE\n              && startMarker.nextSibling.data === '') {\n            startMarker.parentNode.removeChild(startMarker.nextSibling);\n          }\n\n          /**\n           * Chrome and Firefox: `Range.insertNode` inserts a bogus text node\n           * before the inserted element when the child element is at the start of\n           * a block element. We just remove it.\n           * FIXME: Document why we need to remove this\n           * As per: http://jsbin.com/sifez/1/edit?js,console,output\n           */\n          if (startMarker.previousSibling &&\n              startMarker.previousSibling.nodeType === Node.TEXT_NODE\n              && startMarker.previousSibling.data === '') {\n            startMarker.parentNode.removeChild(startMarker.previousSibling);\n          }\n        }\n\n\n        this.selection.removeAllRanges();\n        this.selection.addRange(this.range);\n      }\n    };\n\n    Selection.prototype.getMarkers = function () {\n      return scribe.el.querySelectorAll('em.scribe-marker');\n    };\n\n    Selection.prototype.removeMarkers = function () {\n      var markers = this.getMarkers();\n      Array.prototype.forEach.call(markers, function (marker) {\n        marker.parentNode.removeChild(marker);\n      });\n    };\n\n    // This will select markers if there are any. You will need to focus the\n    // Scribe instance’s element if it is not already for the selection to\n    // become active.\n    Selection.prototype.selectMarkers = function (keepMarkers) {\n      var markers = this.getMarkers();\n      if (!markers.length) {\n        return;\n      }\n\n      var newRange = document.createRange();\n\n      newRange.setStartBefore(markers[0]);\n      if (markers.length >= 2) {\n        newRange.setEndAfter(markers[1]);\n      } else {\n        // We always reset the end marker because otherwise it will just\n        // use the current range’s end marker.\n        newRange.setEndAfter(markers[0]);\n      }\n\n      if (! keepMarkers) {\n        this.removeMarkers();\n      }\n\n      this.selection.removeAllRanges();\n      this.selection.addRange(newRange);\n    };\n\n    Selection.prototype.isCaretOnNewLine = function () {\n      // return true if nested inline tags ultimately just contain <br> or \"\"\n      function isEmptyInlineElement(node) {\n\n        var treeWalker = document.createTreeWalker(node, NodeFilter.SHOW_ELEMENT, null, false);\n\n        var currentNode = treeWalker.root;\n\n        while(currentNode) {\n          var numberOfChildren = currentNode.childNodes.length;\n\n          // forks in the tree or text mean no new line\n          if (numberOfChildren > 1 ||\n              (numberOfChildren === 1 && currentNode.textContent.trim() !== ''))\n            return false;\n\n          if (numberOfChildren === 0) {\n            return currentNode.textContent.trim() === '';\n          }\n\n          currentNode = treeWalker.nextNode();\n        };\n      };\n\n      var containerPElement = this.getContaining(function (node) {\n        return node.nodeName === 'P';\n      });\n      if (containerPElement) {\n        return isEmptyInlineElement(containerPElement);\n      } else {\n        return false;\n      }\n    };\n\n    return Selection;\n  };\n\n});\n\n","define('api/simple-command',[],function () {\n\n  'use strict';\n\n  return function (api, scribe) {\n    function SimpleCommand(commandName, nodeName) {\n      scribe.api.Command.call(this, commandName);\n\n      this.nodeName = nodeName;\n    }\n\n    SimpleCommand.prototype = Object.create(api.Command.prototype);\n    SimpleCommand.prototype.constructor = SimpleCommand;\n\n    SimpleCommand.prototype.queryState = function () {\n      var selection = new scribe.api.Selection();\n      return scribe.api.Command.prototype.queryState.call(this) && !! selection.getContaining(function (node) {\n        return node.nodeName === this.nodeName;\n      }.bind(this));\n    };\n\n    return SimpleCommand;\n  };\n\n});\n\n","define('api',[\n  './api/command-patch',\n  './api/command',\n  './api/node',\n  './api/selection',\n  './api/simple-command'\n], function (\n  buildCommandPatch,\n  buildCommand,\n  Node,\n  buildSelection,\n  buildSimpleCommand\n) {\n\n  'use strict';\n\n  return function Api(scribe) {\n    this.CommandPatch = buildCommandPatch(scribe);\n    this.Command = buildCommand(scribe);\n    this.Node = Node;\n    this.Selection = buildSelection(scribe);\n    this.SimpleCommand = buildSimpleCommand(this, scribe);\n  };\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/objects/assign',['../internals/baseCreateCallback', './keys', '../internals/objectTypes'], function(baseCreateCallback, keys, objectTypes) {\n\n  /**\n   * Assigns own enumerable properties of source object(s) to the destination\n   * object. Subsequent sources will overwrite property assignments of previous\n   * sources. If a callback is provided it will be executed to produce the\n   * assigned values. The callback is bound to `thisArg` and invoked with two\n   * arguments; (objectValue, sourceValue).\n   *\n   * @static\n   * @memberOf _\n   * @type Function\n   * @alias extend\n   * @category Objects\n   * @param {Object} object The destination object.\n   * @param {...Object} [source] The source objects.\n   * @param {Function} [callback] The function to customize assigning values.\n   * @param {*} [thisArg] The `this` binding of `callback`.\n   * @returns {Object} Returns the destination object.\n   * @example\n   *\n   * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });\n   * // => { 'name': 'fred', 'employer': 'slate' }\n   *\n   * var defaults = _.partialRight(_.assign, function(a, b) {\n   *   return typeof a == 'undefined' ? b : a;\n   * });\n   *\n   * var object = { 'name': 'barney' };\n   * defaults(object, { 'name': 'fred', 'employer': 'slate' });\n   * // => { 'name': 'barney', 'employer': 'slate' }\n   */\n  var assign = function(object, source, guard) {\n    var index, iterable = object, result = iterable;\n    if (!iterable) return result;\n    var args = arguments,\n        argsIndex = 0,\n        argsLength = typeof guard == 'number' ? 2 : args.length;\n    if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\n      var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);\n    } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\n      callback = args[--argsLength];\n    }\n    while (++argsIndex < argsLength) {\n      iterable = args[argsIndex];\n      if (iterable && objectTypes[typeof iterable]) {\n      var ownIndex = -1,\n          ownProps = objectTypes[typeof iterable] && keys(iterable),\n          length = ownProps ? ownProps.length : 0;\n\n      while (++ownIndex < length) {\n        index = ownProps[ownIndex];\n        result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];\n      }\n      }\n    }\n    return result\n  };\n\n  return assign;\n});\n\n","define('transaction-manager',['lodash-amd/modern/objects/assign'], function (assign) {\n\n  'use strict';\n\n  return function (scribe) {\n    function TransactionManager() {\n      this.history = [];\n    }\n\n    assign(TransactionManager.prototype, {\n      start: function () {\n        this.history.push(1);\n      },\n\n      end: function () {\n        this.history.pop();\n\n        if (this.history.length === 0) {\n          scribe.pushHistory();\n          scribe.trigger('content-changed');\n        }\n      },\n\n      run: function (transaction) {\n        this.start();\n        // If there is an error, don't prevent the transaction from ending.\n        try {\n          if (transaction) {\n            transaction();\n          }\n        } finally {\n          this.end();\n        }\n      }\n    });\n\n    return TransactionManager;\n  };\n});\n\n","define('undo-manager',[],function () {\n\n  'use strict';\n\n  return function (scribe) {\n\n    function UndoManager() {\n      this.position = -1;\n      this.stack = [];\n      this.debug = scribe.isDebugModeEnabled();\n    }\n\n    UndoManager.prototype.maxStackSize = 100;\n\n    UndoManager.prototype.push = function (item) {\n      if (this.debug) {\n        console.log('UndoManager.push: %s', item);\n      }\n      this.stack.length = ++this.position;\n      this.stack.push(item);\n\n      while (this.stack.length > this.maxStackSize) {\n        this.stack.shift();\n        --this.position;\n      }\n    };\n\n    UndoManager.prototype.undo = function () {\n      if (this.position > 0) {\n        return this.stack[--this.position];\n      }\n    };\n\n    UndoManager.prototype.redo = function () {\n      if (this.position < (this.stack.length - 1)) {\n        return this.stack[++this.position];\n      }\n    };\n\n    return UndoManager;\n  };\n\n});\n\n","/**\n * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>\n * Build: `lodash modularize modern exports=\"amd\" -o ./modern/`\n * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <http://lodash.com/license>\n */\ndefine('lodash-amd/modern/arrays/pull',[], function() {\n\n  /**\n   * Used for `Array` method references.\n   *\n   * Normally `Array.prototype` would suffice, however, using an array literal\n   * avoids issues in Narwhal.\n   */\n  var arrayRef = [];\n\n  /** Native method shortcuts */\n  var splice = arrayRef.splice;\n\n  /**\n   * Removes all provided values from the given array using strict equality for\n   * comparisons, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @category Arrays\n   * @param {Array} array The array to modify.\n   * @param {...*} [value] The values to remove.\n   * @returns {Array} Returns `array`.\n   * @example\n   *\n   * var array = [1, 2, 3, 1, 2, 3];\n   * _.pull(array, 2, 3);\n   * console.log(array);\n   * // => [1, 1]\n   */\n  function pull(array) {\n    var args = arguments,\n        argsIndex = 0,\n        argsLength = args.length,\n        length = array ? array.length : 0;\n\n    while (++argsIndex < argsLength) {\n      var index = -1,\n          value = args[argsIndex];\n      while (++index < length) {\n        if (array[index] === value) {\n          splice.call(array, index--, 1);\n          length--;\n        }\n      }\n    }\n    return array;\n  }\n\n  return pull;\n});\n\n","/**\n *  Copyright (c) 2014, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define('immutable/dist/immutable',factory) :\n  global.Immutable = factory()\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    return index >= 0 ? (+index) : ensureSize(iter) + (+index);\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.of = function(/*...values*/) {\n      return KeyedSeq(arguments);\n    };\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n    KeyedSeq.prototype.toSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  // #pragma Root Sequences\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n    }\n    return typeof valueA.equals === 'function' &&\n      typeof valueB.equals === 'function' ?\n        valueA.equals(valueB) :\n        valueA === valueB || (valueA !== valueA && valueB !== valueB);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && value.constructor === Object;\n  }\n\n  var Math__imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function Math__imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    return hashJSObj(o);\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash = weakMap && weakMap.get(obj);\n    if (hash) return hash;\n\n    hash = obj[UID_HASH_KEY];\n    if (hash) return hash;\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash) return hash;\n\n      hash = getIENodeHash(obj);\n      if (hash) return hash;\n    }\n\n    if (Object.isExtensible && !Object.isExtensible(obj)) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (weakMap) {\n      weakMap.set(obj, hash);\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, 'x', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var weakMap = typeof WeakMap === 'function' && new WeakMap();\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.contains = function(value) {\n      return this._iter.contains(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.contains(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          return fn(entry[1], entry[0], this$0);\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            return type === ITERATE_ENTRIES ? step :\n              iteratorValue(type, entry[0], entry[1], step);\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.contains(key)};\n    flipSequence.contains = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.contains = function(value ) {return iterable.contains(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    var sliceSize = resolvedEnd - resolvedBegin;\n    if (sliceSize < 0) {\n      sliceSize = 0;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ !== resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(keyPath, emptyMap(), function(m ) {return m.merge.apply(m, iters)});\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger(undefined), arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMerger(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(keyPath, emptyMap(), function(m ) {return m.mergeDeep.apply(m, iters)});\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(merger) {\n    return function(existing, value) \n      {return existing && existing.mergeDeepWith && isIterable(value) ?\n        existing.mergeDeepWith(merger, value) :\n        merger ? merger(existing, value) : value};\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index < 0 || index >= this.size) {\n        return notSetValue;\n      }\n      index += this._origin;\n      var node = listNodeFor(this, index);\n      return node && node.array[index & MASK];\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger(undefined), arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMerger(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n      var removingLast = sizeIndex === this.array.length - 1;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingLast) {\n          return this;\n        }\n      }\n      if (removingLast && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingLast) {\n        editable.array.pop();\n      }\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might require creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might require creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.toSeq().cacheResult.__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.toSeq().cacheResult().__iterator(type, reverse);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.contains(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.contains(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var RecordType = function Record(values) {\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        this._map = Map(values);\n      };\n\n      var keys = Object.keys(defaultValues);\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n      name && (RecordTypePrototype._name = name);\n      RecordTypePrototype._defaultValues = defaultValues;\n      RecordTypePrototype._keys = keys;\n      RecordTypePrototype.size = keys.length;\n\n      try {\n        keys.forEach(function(key ) {\n          Object.defineProperty(RecordType.prototype, key, {\n            get: function() {\n              return this.get(key);\n            },\n            set: function(value) {\n              invariant(this.__ownerID, 'Cannot set on an immutable record.');\n              this.set(key, value);\n            }\n          });\n        });\n      } catch (error) {\n        // Object.defineProperty failed. Probably IE8.\n      }\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var SuperRecord = Object.getPrototypeOf(this).constructor;\n      return SuperRecord._empty || (SuperRecord._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        a.cacheResult();\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step > 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.contains = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.contains = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    contains: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    findEntry: function(predicate, context) {\n      var found;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findLastEntry: function(predicate, context) {\n      return this.toSeq().reverse().findEntry(predicate, context);\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.contains === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.contains(value)});\n    },\n\n    isSuperset: function(iter) {\n      return iter.isSubset(this);\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    },\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n\n  // Temporary warning about using length\n  (function () {\n    try {\n      Object.defineProperty(IterablePrototype, 'length', {\n        get: function () {\n          if (!Iterable.noLengthWarning) {\n            var stack;\n            try {\n              throw new Error();\n            } catch (error) {\n              stack = error.stack;\n            }\n            if (stack.indexOf('_wrapObject') === -1) {\n              console && console.warn && console.warn(\n                'iterable.length has been deprecated, '+\n                'use iterable.size or iterable.count(). '+\n                'This warning will become a silent error in a future version. ' +\n                stack\n              );\n              return this.size;\n            }\n          }\n        }\n      });\n    } catch (e) {}\n  })();\n\n\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toSeq().reverse().findKey(predicate, context);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.findLastKey(function(value ) {return is(value, searchValue)});\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    },\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return k + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.toKeyedSeq().keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      return this.toSeq().reverse().indexOf(searchValue);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      index = resolveBegin(index, this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var key = this.toKeyedSeq().findLastKey(predicate, context);\n      return key === undefined ? -1 : key;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    },\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    contains: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    },\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.contains;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : value;\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = Math__imul(h, 0xCC9E2D51);\n    h = Math__imul(h << 15 | h >>> -15, 0x1B873593);\n    h = Math__imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = Math__imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = Math__imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS,\n\n  };\n\n  return Immutable;\n\n}));\n","define('event-emitter',['lodash-amd/modern/arrays/pull',\n  'immutable/dist/immutable'], function (pull, Immutable) {\n\n  'use strict';\n\n  // TODO: once\n  // TODO: unit test\n  // Good example of a complete(?) implementation: https://github.com/Wolfy87/EventEmitter\n  function EventEmitter() {\n    this._listeners = {};\n  }\n\n  EventEmitter.prototype.on = function (eventName, fn) {\n    var listeners = this._listeners[eventName] || Immutable.Set();\n\n    this._listeners[eventName] = listeners.add(fn);\n  };\n\n  EventEmitter.prototype.off = function (eventName, fn) {\n    var listeners = this._listeners[eventName] || Immutable.Set();\n    if (fn) {\n      listeners = listeners.delete(fn);\n    } else {\n      listeners = listeners.clear();\n    }\n  };\n\n  EventEmitter.prototype.trigger = function (eventName, args) {\n    var listeners = this._listeners[eventName] || Immutable.Set();\n\n    listeners.forEach(function (listener) {\n      listener.apply(null, args);\n    });\n  };\n\n  return EventEmitter;\n\n});\n\n","define('scribe',[\n  'lodash-amd/modern/objects/defaults',\n  './plugins/core/commands',\n  './plugins/core/events',\n  './plugins/core/formatters/html/replace-nbsp-chars',\n  './plugins/core/formatters/html/enforce-p-elements',\n  './plugins/core/formatters/html/ensure-selectable-containers',\n  './plugins/core/formatters/plain-text/escape-html-characters',\n  './plugins/core/inline-elements-mode',\n  './plugins/core/patches',\n  './plugins/core/set-root-p-element',\n  './api',\n  './transaction-manager',\n  './undo-manager',\n  './event-emitter',\n  './element',\n  './node',\n  'immutable/dist/immutable'\n], function (\n  defaults,\n  commands,\n  events,\n  replaceNbspCharsFormatter,\n  enforcePElements,\n  ensureSelectableContainers,\n  escapeHtmlCharactersFormatter,\n  inlineElementsMode,\n  patches,\n  setRootPElement,\n  Api,\n  buildTransactionManager,\n  buildUndoManager,\n  EventEmitter,\n  elementHelpers,\n  nodeHelpers,\n  Immutable\n) {\n\n  'use strict';\n\n  function Scribe(el, options) {\n    EventEmitter.call(this);\n\n    this.el = el;\n    this.commands = {};\n\n    this.options = defaults(options || {}, {\n      allowBlockElements: true,\n      debug: false,\n      defaultCommandPatches: [\n        'bold',\n        'indent',\n        'insertHTML',\n        'insertList',\n        'outdent',\n        'createLink'\n      ]\n    });\n\n    this.commandPatches = {};\n    this._plainTextFormatterFactory = new FormatterFactory();\n    this._htmlFormatterFactory = new HTMLFormatterFactory();\n\n    this.api = new Api(this);\n\n    this.node = nodeHelpers;\n    this.element = elementHelpers;\n\n    this.Immutable = Immutable;\n\n    var TransactionManager = buildTransactionManager(this);\n    this.transactionManager = new TransactionManager();\n\n    var UndoManager = buildUndoManager(this);\n    this.undoManager = new UndoManager();\n\n    this.el.setAttribute('contenteditable', true);\n\n    this.el.addEventListener('input', function () {\n      /**\n       * This event triggers when either the user types something or a native\n       * command is executed which causes the content to change (i.e.\n       * `document.execCommand('bold')`). We can't wrap a transaction around\n       * these actions, so instead we run the transaction in this event.\n       */\n      this.transactionManager.run();\n    }.bind(this), false);\n\n    /**\n     * Core Plugins\n     */\n\n    if (this.allowsBlockElements()) {\n      // Commands assume block elements are allowed, so all we have to do is\n      // set the content.\n      // TODO: replace this by initial formatter application?\n      this.use(setRootPElement());\n      // Warning: enforcePElements must come before ensureSelectableContainers\n      this.use(enforcePElements());\n      this.use(ensureSelectableContainers());\n    } else {\n      // Commands assume block elements are allowed, so we have to set the\n      // content and override some UX.\n      this.use(inlineElementsMode());\n    }\n\n    // Formatters\n    var defaultFormatters = Immutable.List.of(\n      escapeHtmlCharactersFormatter,\n      replaceNbspCharsFormatter\n    );\n\n\n    // Patches\n\n    var defaultPatches = Immutable.List.of(\n      patches.events\n    );\n\n    var defaultCommandPatches = Immutable.List(this.options.defaultCommandPatches).map(function(patch) { return patches.commands[patch]; });\n\n    var defaultCommands = Immutable.List.of(\n      'indent',\n      'insertList',\n      'outdent',\n      'redo',\n      'subscript',\n      'superscript',\n      'undo'\n    ).map(function(command) { return commands[command]; });\n\n    var allPlugins = Immutable.List().concat(\n      defaultFormatters,\n      defaultPatches,\n      defaultCommandPatches,\n      defaultCommands);\n\n    allPlugins.forEach(function(plugin) {\n      this.use(plugin());\n    }.bind(this));\n\n    this.use(events());\n  }\n\n  Scribe.prototype = Object.create(EventEmitter.prototype);\n\n  // For plugins\n  // TODO: tap combinator?\n  Scribe.prototype.use = function (configurePlugin) {\n    configurePlugin(this);\n    return this;\n  };\n\n  Scribe.prototype.setHTML = function (html, skipFormatters) {\n    if (skipFormatters) {\n      this._skipFormatters = true;\n    }\n    this.el.innerHTML = html;\n  };\n\n  Scribe.prototype.getHTML = function () {\n    return this.el.innerHTML;\n  };\n\n  Scribe.prototype.getContent = function () {\n    // Remove bogus BR element for Firefox — see explanation in BR mode files.\n    return this._htmlFormatterFactory.formatForExport(this.getHTML().replace(/<br>$/, ''));\n  };\n\n  Scribe.prototype.getTextContent = function () {\n    return this.el.textContent;\n  };\n\n  Scribe.prototype.pushHistory = function () {\n    var previousUndoItem = this.undoManager.stack[this.undoManager.position];\n    var previousContent = previousUndoItem && previousUndoItem\n      .replace(/<em class=\"scribe-marker\">/g, '').replace(/<\\/em>/g, '');\n\n    /**\n     * Chrome and Firefox: If we did push to the history, this would break\n     * browser magic around `Document.queryCommandState` (http://jsbin.com/eDOxacI/1/edit?js,console,output).\n     * This happens when doing any DOM manipulation.\n     */\n\n    // We only want to push the history if the content actually changed.\n    if (! previousUndoItem || (previousUndoItem && this.getHTML() !== previousContent)) {\n      var selection = new this.api.Selection();\n\n      selection.placeMarkers();\n      var html = this.getHTML();\n      selection.removeMarkers();\n\n      this.undoManager.push(html);\n\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  Scribe.prototype.getCommand = function (commandName) {\n    return this.commands[commandName] || this.commandPatches[commandName] || new this.api.Command(commandName);\n  };\n\n  Scribe.prototype.restoreFromHistory = function (historyItem) {\n    this.setHTML(historyItem, true);\n\n    // Restore the selection\n    var selection = new this.api.Selection();\n    selection.selectMarkers();\n\n    // Because we skip the formatters, a transaction is not run, so we have to\n    // emit this event ourselves.\n    this.trigger('content-changed');\n  };\n\n  // This will most likely be moved to another object eventually\n  Scribe.prototype.allowsBlockElements = function () {\n    return this.options.allowBlockElements;\n  };\n\n  Scribe.prototype.setContent = function (content) {\n    if (! this.allowsBlockElements()) {\n      // Set bogus BR element for Firefox — see explanation in BR mode files.\n      content = content + '<br>';\n    }\n\n    this.setHTML(content);\n\n    this.trigger('content-changed');\n  };\n\n  Scribe.prototype.insertPlainText = function (plainText) {\n    this.insertHTML('<p>' + this._plainTextFormatterFactory.format(plainText) + '</p>');\n  };\n\n  Scribe.prototype.insertHTML = function (html) {\n    /**\n     * When pasting text from Google Docs in both Chrome and Firefox,\n     * the resulting text will be wrapped in a B tag. So it would look\n     * something like <b><p>Text</p></b>, which is invalid HTML. The command\n     * insertHTML will then attempt to fix this content by moving the B tag\n     * inside the P. The result is: <p><b></b></p><p>Text</p>, which is valid\n     * but means an extra P is inserted into the text. To avoid this we run the\n     * formatters before the insertHTML command as the formatter will\n     * unwrap the P and delete the B tag. It is acceptable to remove invalid\n     * HTML as Scribe should only accept valid HTML.\n     *\n     * See http://jsbin.com/cayosada/3/edit for more\n     **/\n\n    // TODO: error if the selection is not within the Scribe instance? Or\n    // focus the Scribe instance if it is not already focused?\n    this.getCommand('insertHTML').execute(this._htmlFormatterFactory.format(html));\n  };\n\n  Scribe.prototype.isDebugModeEnabled = function () {\n    return this.options.debug;\n  };\n\n  Scribe.prototype.registerHTMLFormatter = function (phase, fn) {\n    this._htmlFormatterFactory.formatters[phase]\n      = this._htmlFormatterFactory.formatters[phase].push(fn);\n  };\n\n  Scribe.prototype.registerPlainTextFormatter = function (fn) {\n    this._plainTextFormatterFactory.formatters\n      = this._plainTextFormatterFactory.formatters.push(fn);\n  };\n\n  // TODO: abstract\n  function FormatterFactory() {\n    this.formatters = Immutable.List();\n  }\n\n  FormatterFactory.prototype.format = function (html) {\n    // Map the object to an array: Array[Formatter]\n    var formatted = this.formatters.reduce(function (formattedData, formatter) {\n      return formatter(formattedData);\n    }, html);\n\n    return formatted;\n  };\n\n  function HTMLFormatterFactory() {\n    // Define phases\n    // For a list of formatters, see https://github.com/guardian/scribe/issues/126\n    this.formatters = {\n      // Configurable sanitization of the HTML, e.g. converting/filter/removing\n      // elements\n      sanitize: Immutable.List(),\n      // Normalize content to ensure it is ready for interaction\n      normalize: Immutable.List(),\n      'export': Immutable.List()\n    };\n  }\n\n  HTMLFormatterFactory.prototype = Object.create(FormatterFactory.prototype);\n  HTMLFormatterFactory.prototype.constructor = HTMLFormatterFactory;\n\n  HTMLFormatterFactory.prototype.format = function (html) {\n    var formatters = this.formatters.sanitize.concat(this.formatters.normalize);\n\n    var formatted = formatters.reduce(function (formattedData, formatter) {\n      return formatter(formattedData);\n    }, html);\n\n    return formatted;\n  };\n\n  HTMLFormatterFactory.prototype.formatForExport = function (html) {\n    return this.formatters['export'].reduce(function (formattedData, formatter) {\n      return formatter(formattedData);\n    }, html);\n  };\n\n  return Scribe;\n\n});\n\n"],"names":["define","isNative","value","reNative","test","objectProto","Object","prototype","toString","RegExp","String","replace","objectTypes","boolean","function","object","number","string","undefined","isObject","hasOwnProperty","shimKeys","index","iterable","result","call","push","nativeKeys","keys","defaults","source","guard","args","arguments","argsIndex","argsLength","length","ownIndex","ownProps","scribe","indentCommand","api","Command","queryEnabled","selection","Selection","listElement","getContaining","element","nodeName","this","allowsBlockElements","commands","indent","InsertListCommand","commandName","create","constructor","execute","splitList","listItemElements","newListNode","document","createElement","listNode","forEach","listItemElement","appendChild","parentNode","insertBefore","nextElementSibling","queryState","range","node","transactionManager","run","nextListItemElements","Node","nextAll","placeMarkers","pNode","innerHTML","removeChild","selectedListItemElements","Array","map","querySelectorAll","intersectsNode","filter","lastSelectedListItemElement","slice","listItemElementsAfterSelection","documentFragment","createDocumentFragment","pElement","childNodes","selectMarkers","bind","insertOrderedList","insertUnorderedList","outdentCommand","outdent","redoCommand","historyItem","undoManager","redo","restoreFromHistory","position","stack","el","addEventListener","event","shiftKey","metaKey","ctrlKey","keyCode","preventDefault","subscriptCommand","subscript","superscriptCommand","superscript","undoCommand","undo","insertList","baseIndexOf","array","fromIndex","noop","baseCreate","nativeCreate","window","descriptor","configurable","enumerable","writable","defineProperty","o","func","e","setBindData","start","end","baseBind","bindData","bound","partialArgs","apply","thisBinding","thisArg","arrayRef","baseCreateWrapper","isBind","partialRightArgs","isCurry","arity","bitmask","isCurryBound","isBindKey","key","isFunction","createWrapper","isPartial","isPartialRight","TypeError","__bindData__","unshift","creater","identity","reThis","support","funcDecomp","WinRTError","funcNames","Function","name","baseCreateCallback","argCount","fnToString","reFuncName","a","b","collection","accumulator","forOwn","callback","arrayClass","nativeIsArray","isArray","isString","stringClass","contains","target","indexOf","nativeMax","Math","max","isArguments","argsClass","baseFlatten","isShallow","isStrict","valIndex","valLength","resIndex","forIn","arrayPool","getArray","pop","maxPoolSize","releaseArray","baseIsEqual","isWhere","stackA","stackB","type","otherType","className","otherClass","objectClass","boolClass","dateClass","numberClass","regexpClass","isArr","aWrapped","bWrapped","__wrapped__","ctorA","ctorB","initedStack","size","property","createCallback","props","flatten","values","toArray","isBlockElement","blockElementNames","isSelectionMarkerNode","nodeType","ELEMENT_NODE","isCaretPositionNode","unwrap","childNode","isEmptyTextNode","TEXT_NODE","textContent","insertAfter","newNode","referenceNode","nextSibling","removeNode","elementHelpers","nodeHelpers","observeDomChanges","includeRealMutations","mutations","allChangedNodes","mutation","added","addedNodes","removed","removedNodes","concat","realChangedNodes","n","MutationObserver","WebKitMutationObserver","MozMutationObserver","runningPostMutation","observer","setTimeout","observe","attributes","childList","subtree","pushHistoryOnFocus","pushHistory","removeEventListener","getFirstDeepestChild","treeWalker","createTreeWalker","NodeFilter","SHOW_ALL","previousNode","currentNode","firstChild","isFirefoxBug","startContainer","focusElement","setStart","setEnd","removeAllRanges","addRange","applyFormatters","_skipFormatters","isEditorActive","runFormatters","setHTML","_htmlFormatterFactory","format","getHTML","headingNode","collapsed","contentToEndRange","cloneRange","setEndAfter","contentToEndFragment","cloneContents","brNode","containerLIElement","trim","command","getCommand","clipboardData","types","insertHTML","getData","insertPlainText","bin","body","setAttribute","focus","data","nbspCharRegExp","registerHTMLFormatter","html","last","wrapChildNodes","groups","reduce","binChildNode","startNewGroup","newGroup","group","isBlockGroup","consecutiveInlineElementsAndTextNodes","nodes","_isWrapped","traverse","SHOW_ELEMENT","parentHasNoTextContent","isEmpty","children","firstElementChild","html5VoidElements","htmlEscapes","&","<",">","\"","'","escapeHtmlChar","match","reUnescapedHtml","join","escape","registerPlainTextFormatter","hasContent","rootNode","nextNode","toLowerCase","blockNode","lastChild","insertNode","collapse","bogusBrNode","newRange","setStartAfter","setContent","boldCommand","CommandPatch","commandPatches","bold","INVISIBLE_CHAR","isCaretOnNewLine","commonAncestorContainer","textNode","createTextNode","blockquoteNode","removeAttribute","insertHTMLCommandPatch","sanitize","style","lineHeight","getAttribute","InsertListCommandPatch","listParentNode","listItemElementChildNodes","listElementChildNode","spanElement","selectedNodes","deleteContents","nextSiblingNodes","newContainerNode","siblingNode","createLinkCommand","createLink","isCollapsed","aElement","createRange","setStartBefore","containerPElement","pElementChildNodes","pElementChildNode","insertHTMLCommand","insertListCommands","events","execCommand","queryCommandState","queryCommandEnabled","patch","getAncestor","rootElement","nodeFilter","isTopContainerElement","all","getSelection","rangeCount","getRangeAt","offsetParent","scribeNodeRange","selectNodeContents","selectionStartWithinScribeElementStart","compareBoundaryPoints","Range","START_TO_START","selectionEndWithinScribeElementEnd","END_TO_END","startMarker","classList","add","endMarker","rangeEnd","previousSibling","rangeStart","getMarkers","removeMarkers","markers","marker","keepMarkers","isEmptyInlineElement","root","numberOfChildren","SimpleCommand","buildCommandPatch","buildCommand","buildSelection","buildSimpleCommand","assign","TransactionManager","history","trigger","transaction","UndoManager","debug","isDebugModeEnabled","maxStackSize","item","console","log","shift","pull","splice","global","factory","exports","module","amd","Immutable","createClass","ctor","superClass","MakeRef","ref","SetRef","OwnerID","arrCopy","arr","offset","len","newArr","ii","ensureSize","iter","__iterate","returnTrue","wrapIndex","wholeSlice","begin","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","Iterable","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","Iterator","next","iteratorValue","k","v","iteratorResult","done","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iteratorFn","REAL_ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","isArrayLike","emptySequence","toSeq","seqFromValue","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","entrySeq","toIndexedSeq","indexedSeqFromValue","toSetSeq","ArraySeq","_array","ObjectSeq","_object","_keys","IterableSeq","_iterable","IteratorSeq","iterator","_iterator","_iteratorCache","isSeq","maybeSeq","IS_SEQ_SENTINEL","EMPTY_SEQ","seq","maybeIndexedSeqFromValue","seqIterate","fn","reverse","useKeys","cache","_cache","maxIndex","entry","__iterateUncached","seqIterator","__iteratorUncached","Collection","KeyedCollection","IndexedCollection","SetCollection","is","valueA","valueB","valueOf","equals","fromJS","json","converter","fromJSWith","fromJSDefault","parentJSON","isPlainObj","toList","toMap","smi","i32","hash","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","obj","weakMap","get","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","isExtensible","Error","objHashUID","set","uniqueID","documentElement","invariant","condition","error","assertNotInfinite","Infinity","ToKeyedSequence","indexed","_iter","_useKeys","ToIndexedSequence","ToSetSequence","FromEntriesSequence","entries","flipFactory","flipSequence","makeSequence","flip","reversedSequence","has","cacheResult","cacheResultThrough","this$0","ITERATE_ENTRIES","__iterator","step","ITERATE_VALUES","ITERATE_KEYS","mapFactory","mapper","context","mappedSequence","notSetValue","NOT_SET","c","reverseFactory","filterFactory","predicate","filterSequence","iterations","countByFactory","grouper","Map","asMutable","update","asImmutable","groupByFactory","isKeyedIter","OrderedMap","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","sliceSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","iters","singleton","concatSeq","sum","flattenFactory","depth","flatSequence","flatDeep","currentDepth","stopped","flatMapFactory","interposeFactory","separator","interposedSequence","sortFactory","comparator","defaultComparator","sort","i","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","s","validateEntry","resolveSize","forceIterator","keyPath","emptyMap","isMap","withMutations","maybeMap","IS_MAP_SENTINEL","ArrayMapNode","ownerID","BitmapIndexedNode","bitmap","HashArrayMapNode","count","HashCollisionNode","keyHash","ValueNode","MapIterator","_type","_reverse","_stack","_root","mapIteratorFrame","mapIteratorValue","prev","__prev","makeMap","MapPrototype","__ownerID","__hash","__altered","EMPTY_MAP","updateMap","newRoot","newSize","didChangeSize","CHANGE_LENGTH","didAlter","DID_ALTER","updateNode","isLeafNode","mergeIntoNode","idx1","MASK","idx2","SHIFT","createNodes","packNodes","excluding","packedII","packedNodes","bit","expandNodes","including","expandedNodes","SIZE","mergeIntoMapWith","merger","iterables","mergeIntoCollectionWith","deepMerger","existing","mergeDeepWith","x","mergeIntoMap","updateInDeepMap","keyPathIter","updater","isNotSet","existingValue","newValue","nextExisting","nextUpdated","remove","popCount","setIn","idx","val","canEdit","newArray","spliceIn","newLen","after","spliceOut","List","empty","emptyList","isList","makeList","VNode","list","setSize","maybeList","IS_LIST_SENTINEL","iterateList","iterateNodeOrLeaf","level","iterateLeaf","iterateNode","tailPos","tail","from","left","to","right","DONE","_origin","_capacity","getTailOffset","_tail","_level","origin","capacity","ListPrototype","EMPTY_LIST","updateList","setListBounds","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","editableVNode","listNodeFor","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","clear","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","removeAfter","removeBefore","beginIndex","mergeIntoListWith","maxSize","emptyOrderedMap","isOrderedMap","maybeOrderedMap","makeOrderedMap","omap","_map","_list","EMPTY_ORDERED_MAP","updateOrderedMap","newMap","newList","Stack","emptyStack","isStack","unshiftAll","maybeStack","IS_STACK_SENTINEL","makeStack","head","StackPrototype","_head","EMPTY_STACK","Set","emptySet","isSet","maybeSet","IS_SET_SENTINEL","updateSet","__empty","__make","makeSet","SetPrototype","EMPTY_SET","OrderedSet","emptyOrderedSet","isOrderedSet","maybeOrderedSet","makeOrderedSet","OrderedSetPrototype","EMPTY_ORDERED_SET","Record","defaultValues","RecordType","RecordTypePrototype","RecordPrototype","_name","_defaultValues","makeRecord","likeRecord","record","getPrototypeOf","recordName","deepEqual","notAssociative","every","flipped","_","allEqual","bSize","abs","_start","_end","_step","ceil","EMPTY_RANGE","Repeat","times","_value","EMPTY_REPEAT","mixin","methods","keyCopier","getOwnPropertySymbols","keyMapper","entryMapper","not","neg","quoteString","JSON","stringify","defaultZipper","defaultNegComparator","hashIterable","ordered","keyed","hashMerge","murmurHashOfSize","Math__imul","SLICE$0","DELETE","Keyed","Indexed","Symbol","ITERATOR_SYMBOL","KEYS","VALUES","ENTRIES","inspect","toSource","of","__toString","imul","d","WeakMap","valueSeq","updateIn","deleteIn","updatedValue","merge","mergeWith","mergeIn","m","mergeDeep","mergeDeepIn","sortBy","mutable","wasAltered","__ensureOwner","iterate","removeIn","exists","MAX_ARRAY_MAP_SIZE","isEditable","newEntries","keyHashFrag","MAX_BITMAP_INDEXED_SIZE","newBitmap","newNodes","newCount","MIN_HASH_ARRAY_MAP_SIZE","keyMatch","subNode","oldSize","originIndex","newChild","removingFirst","oldChild","editable","sizeIndex","removingLast","peek","pushAll","fromKeys","keySeq","union","intersect","originalSet","subtract","defaultVal","SuperRecord","_empty","searchValue","possibleIndex","floor","offsetValue","lastIndexOf","other","toJS","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","returnValue","find","findEntry","found","findLastEntry","sideEffect","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","butLast","countBy","entriesSequence","filterNot","findLast","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","maxBy","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","IterablePrototype","chain","noLengthWarning","warn","findKey","findLastKey","keyOf","lastKeyOf","mapEntries","mapKeys","KeyedIterablePrototype","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","zipWith","EventEmitter","_listeners","on","eventName","listeners","off","listener","replaceNbspCharsFormatter","enforcePElements","ensureSelectableContainers","escapeHtmlCharactersFormatter","inlineElementsMode","patches","setRootPElement","Api","buildTransactionManager","buildUndoManager","Scribe","options","allowBlockElements","defaultCommandPatches","_plainTextFormatterFactory","FormatterFactory","HTMLFormatterFactory","use","defaultFormatters","defaultPatches","defaultCommands","allPlugins","plugin","formatters","normalize","export","configurePlugin","skipFormatters","getContent","formatForExport","getTextContent","previousUndoItem","previousContent","content","plainText","phase","formatted","formattedData","formatter"]}